{"mappings":"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","sources":["src/modules/mainpage.ts"],"sourcesContent":["\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { getDatabase, ref, onValue, get } from 'firebase/database';\r\nimport { fetchUsers } from './firebase';\r\nimport { createPost } from './firebase';\r\nimport { updateLikes } from './firebase';\r\nimport { logOutAccount } from './firebase';\r\nimport { deleteAccount } from './firebase';\r\n\r\n\r\n//main function för att lägga i window EventListener så att allt annat laddar innan den körs.\r\nconst main = () => {\r\n    console.log('main function called');\r\n    const auth = getAuth();\r\n   \r\n\r\n  \r\n    onAuthStateChanged(auth, (user) => {\r\n      console.log('auth state changed', user);\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const db = getDatabase();\r\n        const userRef = ref(db, `users/${userId}`);\r\n  \r\n        onValue(userRef, (snapshot) => {\r\n            const userData = snapshot.val();\r\n            console.log('userData:', userData);\r\n            const userNameDisplay = document.getElementById('username'); \r\n            const userNameLogOutDisplay = document.querySelector('.logout-container p');\r\n            const userImageDisplay = document.getElementById('profileImage') as HTMLImageElement;\r\n          \r\n            userNameLogOutDisplay && (userNameLogOutDisplay.innerHTML = userData.username);\r\n            userNameDisplay && (userNameDisplay.innerText = userData.username);\r\n            if(userImageDisplay){\r\n             userImageDisplay.src = userData.image\r\n            }\r\n          });\r\n          //kalla på visa inlägg\r\n          displayPosts();\r\n          displayTop10LikedPosts();\r\n        \r\n        //Visa users på höger section och lägg till url för profil besök\r\n        fetchUsers().then((users) => {\r\n          console.log('users:', users);\r\n          console.log(Object.values(users))\r\n       \r\n        interface User {\r\n        username: string;\r\n         }\r\n         (Object.entries(users) as [string, User][]).forEach(([userId, user]) => {\r\n          const container = document.querySelector('.user-names');\r\n          const p = document.createElement('p');\r\n          p.setAttribute('data-user-id', userId);\r\n          container?.append(p);\r\n          p && (p.innerText = user.username);\r\n        \r\n          p.addEventListener('click', () => {\r\n            window.location.href = `./profile.html?userId=${userId}`;\r\n          });\r\n        });\r\n        });\r\n      } else {\r\n        console.log('No user is signed in');\r\n      }\r\n    });\r\n  };\r\n  \r\n  \r\nwindow.addEventListener('load', main);\r\n\r\n\r\n\r\n\r\n//Skapa inlägg\r\ndocument.getElementById('postBtn')?.addEventListener('click', async (event) => {\r\n  event.preventDefault(); \r\n\r\n  const auth = getAuth();\r\n  const currentUser = auth.currentUser;\r\n  if (currentUser) {\r\n    const userId = currentUser.uid;\r\n    const contentInput = document.getElementById('postContent') as HTMLInputElement;\r\n    const content = contentInput.value;\r\n\r\n    if (content) {\r\n      await createPost(userId, content);\r\n      contentInput.value = ''; \r\n    } else {\r\n      console.log('No content provided');\r\n    }\r\n  } else {\r\n    console.log('No user is signed in');\r\n  }\r\n});\r\n\r\n\r\n//Visa inlägg\r\ninterface Post {\r\n  id: string,\r\n  userId: string;\r\n  content: string;\r\n  createdAt: string;\r\n  likes: number;\r\n}\r\n\r\nexport const displayPosts = (userId?: string) => {\r\n  const db = getDatabase();\r\n  const postsRef = ref(db, 'posts');\r\n\r\n  onValue(postsRef, async (snapshot) => {\r\n    const posts = snapshot.val();\r\n    const postContainer = document.getElementById('postsList');\r\n\r\n    if (posts && postContainer) {\r\n      postContainer.innerHTML = '';\r\n\r\n      \r\n      const postArray = Object.entries(posts).map(([id, post]) => ({ id, userId: (post as Post).userId, content: (post as Post).content, createdAt: (post as Post).createdAt, likes: (post as Post).likes }));\r\n     \r\n\r\n\r\n      // Sortera array efter tid skapad\r\n      postArray.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\r\n\r\n      for (const post of postArray) {\r\n        const userSnapshot = await get(ref(db, `users/${post.userId}`));\r\n        const user = userSnapshot.val();\r\n\r\n        const postItem = document.createElement('div');\r\n        postItem.className = 'post-item';\r\n        postItem.innerHTML = `\r\n          <h5 class=\"postName\">${user.username}</h5>\r\n          <p class=\"postContent\">${post.content}</p>\r\n          <p class=\"postTime\">${post.createdAt}</p>\r\n          <div class=\"post-actions\">\r\n          <a class=\"like-btn\" data-post-id=\"${post.id}\"><i class=\"far fa-heart\"></i> ${post.likes}</a>\r\n            <a class=\"reply-btn\"><i class=\"far fa-comment\"></i></a>\r\n          </div>\r\n        `;\r\n\r\n        postContainer.appendChild(postItem);\r\n\r\n        const likeBtn = postItem.querySelector('.like-btn') as HTMLElement;\r\n        if (likeBtn) {\r\n          likeBtn.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            handleLike(event, post.id, post.userId);\r\n            \r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n //hantera likes\r\nexport async function handleLike(event: Event, postId: string, userId: string) {\r\n  event.preventDefault();\r\n  \r\n  const db = getDatabase();\r\n  \r\n  const postSnapshot = await get(ref(db, `posts/${postId}`));\r\n  const postData = postSnapshot.val();\r\n\r\n  if (postData) {\r\n    const currentLikes = postData.likes;\r\n\r\n    \r\n    const updatedLikes = currentLikes + 1;\r\n    await updateLikes( postId, updatedLikes);\r\n\r\n     \r\n     const likeButton = event.target as HTMLElement;\r\n     likeButton.textContent = ` Likes: ${updatedLikes}`;\r\n   } else {\r\n     console.error(`Unable to find post data for post ID: ${postId}`);\r\n   }\r\n }\r\n\r\n//visa top 10 liked inlägg\r\nexport const displayTop10LikedPosts = async () => {\r\n  const db = getDatabase();\r\n  const postsRef = ref(db, 'posts');\r\n  const snapshot = await get(postsRef);\r\n  const posts = snapshot.val();\r\n  console.log(posts)\r\n\r\n  const postArray = Object.entries(posts).map(([id, post]) => ({ id, userId: (post as Post).userId, content: (post as Post).content, createdAt: (post as Post).createdAt, likes: (post as Post).likes }));\r\n  console.log(postArray)\r\n  postArray.sort((a, b) => b.likes - a.likes);\r\n  const top10Posts = postArray.slice(0, 5);\r\n  \r\n  const top10PostsContainer = document.getElementById('top10LikedPosts');\r\n\r\n  if (top10PostsContainer) {\r\n    top10PostsContainer.innerHTML = '';\r\n\r\n    for (const post of top10Posts) {\r\n      const userSnapshot = await get(ref(db, `users/${post.userId}`));\r\n      const user = userSnapshot.val();\r\n\r\n      const postItem = document.createElement('div');\r\n      postItem.className = 'postLiked10';\r\n      postItem.innerHTML = `\r\n        <h5 class=\"postNameLiked\">${user.username}</h5>\r\n        <p class=\"postContentLiked\">${post.content}</p>\r\n        <p class=\"postLikesLiked\">Likes: ${post.likes}</p>\r\n      `;\r\n\r\n      top10PostsContainer.appendChild(postItem);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n//logga ut\r\nconst logOutBtn = document.querySelector('#loggOutBtn') as HTMLElement;\r\nlogOutBtn.addEventListener('click', () =>{\r\n   logOutAccount().then(() => {\r\n    location.assign('../index.html');\r\n  });\r\n})\r\n\r\n//radera konto\r\nconst deleteAccountBtn = document.querySelector('#deleteAccountBtn') as HTMLElement\r\ndeleteAccountBtn.addEventListener('click', () => {\r\n  deleteAccount().then(() => {\r\n    location.assign('../index.html');\r\n  });\r\n})"],"names":["$6AR8M","parcelRequire","window","addEventListener","console","log","auth","getAuth","onAuthStateChanged","user","userId","uid","db","$gdelx","getDatabase","userRef","ref","onValue","snapshot","userData","val","userNameDisplay","document","getElementById","userNameLogOutDisplay","querySelector","userImageDisplay","innerHTML","username","innerText","src","image","$26e40e4babb8c21b$export$da60481b74204b40","$26e40e4babb8c21b$export$604dda215122b2e7","$k8Jq9","fetchUsers","then","users","Object","values","entries","forEach","container","p","createElement","setAttribute","append","location","href","async","event","preventDefault","currentUser","contentInput","content","value","createPost","postsRef","posts","postContainer","postArray","map","id","post","createdAt","likes","sort","a","b","Date","getTime","get","postItem","className","appendChild","likeBtn","$26e40e4babb8c21b$export$219fcab950e9d842","postId","postData","updatedLikes","updateLikes","target","textContent","error","top10Posts","slice","top10PostsContainer","logOutAccount","assign","deleteAccount"],"version":3,"file":"mainpage.8d9e4c78.js.map"}