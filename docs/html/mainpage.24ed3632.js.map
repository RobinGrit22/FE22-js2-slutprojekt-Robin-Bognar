{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-18f1da046622a545.js","src/modules/mainpage.ts","node_modules/@parcel/runtime-js/lib/runtime-914022b395d48e92.js","node_modules/@parcel/runtime-js/lib/runtime-3216e6d1627e9775.js","node_modules/@parcel/runtime-js/lib/runtime-0964406502b73b9f.js","node_modules/@parcel/runtime-js/lib/runtime-9ddc2a0831d959c6.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"eqpYo\\\":\\\"mainpage.24ed3632.js\\\",\\\"5krED\\\":\\\"unicorn.9741a3c2.jpg\\\",\\\"erfBi\\\":\\\"unicorn2.07a228f2.png\\\",\\\"7ee9c\\\":\\\"unicorn3.702da4bf.png\\\",\\\"b0Obp\\\":\\\"unicorn4.2a835587.png\\\",\\\"3Iiwf\\\":\\\"profile.68ebbba3.js\\\"}\"));","\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { getDatabase, ref, onValue, get } from 'firebase/database';\r\nimport { fetchUsers } from './firebase';\r\nimport { createPost } from './firebase';\r\nimport { updateLikes } from './firebase';\r\nimport { logOutAccount } from './firebase';\r\nimport { deleteAccount } from './firebase';\r\n\r\n\r\n//main function för att lägga i window EventListener så att allt annat laddar innan den körs.\r\nconst main = () => {\r\n    console.log('main function called');\r\n    const auth = getAuth();\r\n   \r\n\r\n  \r\n    onAuthStateChanged(auth, (user) => {\r\n      console.log('auth state changed', user);\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const db = getDatabase();\r\n        const userRef = ref(db, `users/${userId}`);\r\n  \r\n        onValue(userRef, (snapshot) => {\r\n            const userData = snapshot.val();\r\n            console.log('userData:', userData);\r\n            const userNameDisplay = document.getElementById('username'); \r\n            const userNameLogOutDisplay = document.querySelector('.logout-container p');\r\n            const userImageDisplay = document.getElementById('profileImage') as HTMLImageElement;\r\n          \r\n            userNameLogOutDisplay && (userNameLogOutDisplay.innerHTML = userData.username);\r\n            userNameDisplay && (userNameDisplay.innerText = userData.username);\r\n            if(userImageDisplay){\r\n              if(userData.image === '../image/unicorn.jpg'){\r\n                const imgUrl = new URL('../image/unicorn.jpg', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n              if(userData.image === '../image/unicorn2.png'){\r\n                const imgUrl = new URL('../image/unicorn2.png', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n              if(userData.image === '../image/unicorn3.png'){\r\n                const imgUrl = new URL('../image/unicorn3.png', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n              if(userData.image === '../image/unicorn4.png'){\r\n                const imgUrl = new URL('../image/unicorn4.png', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n            }\r\n          });\r\n          //kalla på visa inlägg\r\n          displayPosts();\r\n          displayTop10LikedPosts();\r\n        \r\n        //Visa users på höger section\r\n        fetchUsers().then((users) => {\r\n          console.log('users:', users);\r\n          console.log(Object.values(users))\r\n       \r\n        interface User {\r\n        username: string;\r\n         }\r\n         (Object.entries(users) as [string, User][]).forEach(([userId, user]) => {\r\n          const container = document.querySelector('.user-names');\r\n          const p = document.createElement('p');\r\n          p.setAttribute('data-user-id', userId);\r\n          container?.append(p);\r\n          p && (p.innerText = user.username);\r\n        \r\n          p.addEventListener('click', () => {\r\n            window.location.href = `./profile.html?userId=${userId}`;\r\n          });\r\n        });\r\n        });\r\n      } else {\r\n        console.log('No user is signed in');\r\n      }\r\n    });\r\n  };\r\n  \r\n  \r\nwindow.addEventListener('load', main);\r\n\r\n\r\n\r\n\r\n//Skapa inlägg\r\ndocument.getElementById('postBtn')?.addEventListener('click', async (event) => {\r\n  event.preventDefault(); \r\n\r\n  const auth = getAuth();\r\n  const currentUser = auth.currentUser;\r\n  if (currentUser) {\r\n    const userId = currentUser.uid;\r\n    const contentInput = document.getElementById('postContent') as HTMLInputElement;\r\n    const content = contentInput.value;\r\n\r\n    if (content) {\r\n      await createPost(userId, content);\r\n      contentInput.value = ''; \r\n    } else {\r\n      console.log('No content provided');\r\n    }\r\n  } else {\r\n    console.log('No user is signed in');\r\n  }\r\n});\r\n\r\n\r\n//Visa inlägg\r\ninterface Post {\r\n  id: string,\r\n  userId: string;\r\n  content: string;\r\n  createdAt: string;\r\n  likes: number;\r\n}\r\n\r\nconst displayPosts = () => {\r\n  const db = getDatabase();\r\n  const postsRef = ref(db, 'posts');\r\n\r\n  onValue(postsRef, async (snapshot) => {\r\n    const posts = snapshot.val();\r\n    const postContainer = document.getElementById('postsList');\r\n\r\n    if (posts && postContainer) {\r\n      postContainer.innerHTML = '';\r\n\r\n      // Create an array of post objects with their respective IDs\r\n      const postArray = Object.entries(posts).map(([id, post]) => ({ id, userId: (post as Post).userId, content: (post as Post).content, createdAt: (post as Post).createdAt, likes: (post as Post).likes }));\r\n     \r\n\r\n\r\n      // Sort the array based on createdAt attribute in descending order\r\n      postArray.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\r\n\r\n      for (const post of postArray) {\r\n        const userSnapshot = await get(ref(db, `users/${post.userId}`));\r\n        const user = userSnapshot.val();\r\n\r\n        const postItem = document.createElement('div');\r\n        postItem.className = 'post-item';\r\n        postItem.innerHTML = `\r\n          <h5 class=\"postName\">${user.username}</h5>\r\n          <p class=\"postContent\">${post.content}</p>\r\n          <p class=\"postTime\">${post.createdAt}</p>\r\n          <div class=\"post-actions\">\r\n          <a class=\"like-btn\" data-post-id=\"${post.id}\"><i class=\"far fa-heart\"></i> ${post.likes}</a>\r\n            <a class=\"reply-btn\"><i class=\"far fa-comment\"></i></a>\r\n          </div>\r\n        `;\r\n\r\n        postContainer.appendChild(postItem);\r\n\r\n        const likeBtn = postItem.querySelector('.like-btn') as HTMLElement;\r\n        if (likeBtn) {\r\n          likeBtn.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            handleLike(event, post.id, post.userId);\r\n            \r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nasync function handleLike(event: Event, postId: string, userId: string) {\r\n  event.preventDefault();\r\n  \r\n  const db = getDatabase();\r\n  \r\n  // Fetch current likes count\r\n  const postSnapshot = await get(ref(db, `posts/${postId}`));\r\n  const postData = postSnapshot.val();\r\n\r\n  if (postData) {\r\n    const currentLikes = postData.likes;\r\n\r\n    // Update the likes count in the database\r\n    const updatedLikes = currentLikes + 1;\r\n    await updateLikes( postId, updatedLikes);\r\n\r\n     // Toggle the liked class for the heart icon\r\n     const likeButton = event.target as HTMLElement;\r\n     likeButton.textContent = ` Likes: ${updatedLikes}`;\r\n   } else {\r\n     console.error(`Unable to find post data for post ID: ${postId}`);\r\n   }\r\n }\r\n\r\n//visa top 10 liked inlägg\r\n const displayTop10LikedPosts = async () => {\r\n  const db = getDatabase();\r\n  const postsRef = ref(db, 'posts');\r\n  const snapshot = await get(postsRef);\r\n  const posts = snapshot.val();\r\n\r\n  const postArray = Object.entries(posts).map(([id, post]) => ({ id, userId: (post as Post).userId, content: (post as Post).content, createdAt: (post as Post).createdAt, likes: (post as Post).likes }));\r\n \r\n  postArray.sort((a, b) => b.likes - a.likes);\r\n  const top10Posts = postArray.slice(0, 5);\r\n  \r\n  const top10PostsContainer = document.getElementById('top10LikedPosts');\r\n\r\n  if (top10PostsContainer) {\r\n    top10PostsContainer.innerHTML = '';\r\n\r\n    for (const post of top10Posts) {\r\n      const userSnapshot = await get(ref(db, `users/${post.userId}`));\r\n      const user = userSnapshot.val();\r\n\r\n      const postItem = document.createElement('div');\r\n      postItem.className = 'postLiked10';\r\n      postItem.innerHTML = `\r\n        <h5 class=\"postNameLiked\">${user.username}</h5>\r\n        <p class=\"postContentLiked\">${post.content}</p>\r\n        <p class=\"postLikesLiked\">Likes: ${post.likes}</p>\r\n      `;\r\n\r\n      top10PostsContainer.appendChild(postItem);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n//logga ut\r\nconst logOutBtn = document.querySelector('#loggOutBtn') as HTMLElement;\r\nlogOutBtn.addEventListener('click', () =>{\r\n   logOutAccount().then(() => {\r\n    location.assign('../index.html');\r\n  });\r\n})\r\n\r\n//radera konto\r\nconst deleteAccountBtn = document.querySelector('#deleteAccountBtn') as HTMLElement\r\ndeleteAccountBtn.addEventListener('click', () => {\r\n  deleteAccount().then(() => {\r\n    location.assign('../index.html');\r\n  });\r\n})","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"5krED\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"erfBi\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"7ee9c\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"b0Obp\")).toString();"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$6AR8M","$0ba618d27e73033e$exports","URL","resolve","url","toString","$bd3c449d8996b04d$exports","$697e1cdf7f5f533a$exports","$ebfe3654a4b09865$exports","window","addEventListener","console","log","auth","getAuth","onAuthStateChanged","user","userId","uid","db","$gdelx","getDatabase","userRef","ref","onValue","snapshot","userData","val","userNameDisplay","document","getElementById","userNameLogOutDisplay","querySelector","userImageDisplay","innerHTML","username","innerText","image","imgUrl","src","href","$26e40e4babb8c21b$var$displayPosts","$26e40e4babb8c21b$var$displayTop10LikedPosts","$k8Jq9","fetchUsers","then","users","values","entries","forEach","container","p","createElement","setAttribute","append","location","async","event","preventDefault","currentUser","contentInput","content","value","createPost","postsRef","posts","postContainer","postArray","map","post","createdAt","likes","sort","a","b","Date","getTime","get","postItem","className","appendChild","likeBtn","$26e40e4babb8c21b$var$handleLike","postId","postData","updatedLikes","updateLikes","target","textContent","error","top10Posts","slice","top10PostsContainer","logOutAccount","assign","deleteAccount"],"version":3,"file":"mainpage.24ed3632.js.map"}