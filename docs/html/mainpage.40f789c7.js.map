{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-45e1063707c8eaff.js","src/modules/mainpage.ts","node_modules/emoji-picker-element/database.js","node_modules/emoji-picker-element/picker.js","node_modules/@parcel/runtime-js/lib/runtime-914022b395d48e92.js","node_modules/@parcel/runtime-js/lib/runtime-3216e6d1627e9775.js","node_modules/@parcel/runtime-js/lib/runtime-0964406502b73b9f.js","node_modules/@parcel/runtime-js/lib/runtime-9ddc2a0831d959c6.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"eqpYo\\\":\\\"mainpage.40f789c7.js\\\",\\\"5krED\\\":\\\"unicorn.9741a3c2.jpg\\\",\\\"erfBi\\\":\\\"unicorn2.07a228f2.png\\\",\\\"7ee9c\\\":\\\"unicorn3.702da4bf.png\\\",\\\"b0Obp\\\":\\\"unicorn4.2a835587.png\\\",\\\"10rfY\\\":\\\"mainpage.6c9e8114.js\\\"}\"));","\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { getDatabase, ref, onValue, get } from 'firebase/database';\r\nimport { fetchUsers } from './firebase';\r\nimport { createPost } from './firebase';\r\nimport { updateLikes } from './firebase';\r\nimport 'emoji-picker-element';\r\n\r\n//main function för att lägga i window EventListener så att allt annat laddar innan den körs.\r\nconst main = () => {\r\n    console.log('main function called');\r\n    const auth = getAuth();\r\n   \r\n\r\n  \r\n    onAuthStateChanged(auth, (user) => {\r\n      console.log('auth state changed', user);\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const db = getDatabase();\r\n        const userRef = ref(db, `users/${userId}`);\r\n  \r\n        onValue(userRef, (snapshot) => {\r\n            const userData = snapshot.val();\r\n            console.log('userData:', userData);\r\n            const userNameDisplay = document.getElementById('username'); \r\n            const userNameLogOutDisplay = document.querySelector('.logout-container p');\r\n            const userImageDisplay = document.getElementById('profileImage') as HTMLImageElement;\r\n          \r\n            userNameLogOutDisplay && (userNameLogOutDisplay.innerHTML = userData.username);\r\n            userNameDisplay && (userNameDisplay.innerText = userData.username);\r\n            if(userImageDisplay){\r\n              if(userData.image === '../image/unicorn.jpg'){\r\n                const imgUrl = new URL('../image/unicorn.jpg', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n              if(userData.image === '../image/unicorn2.png'){\r\n                const imgUrl = new URL('../image/unicorn2.png', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n              if(userData.image === '../image/unicorn3.png'){\r\n                const imgUrl = new URL('../image/unicorn3.png', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n              if(userData.image === '../image/unicorn4.png'){\r\n                const imgUrl = new URL('../image/unicorn4.png', import.meta.url)\r\n              userImageDisplay.src = imgUrl.href\r\n              }\r\n            }\r\n          });\r\n          //kalla på visa inlägg\r\n          displayPosts();\r\n        \r\n        \r\n        //Visa users på höger section\r\n        fetchUsers().then((users) => {\r\n          console.log('users:', users);\r\n          console.log(Object.values(users))\r\n       \r\n        interface User {\r\n        username: string;\r\n         }\r\n(Object.values(users) as User[]).forEach((user: User) => {\r\n  const container = document.querySelector('.user-container');\r\n  const p = document.createElement('p');\r\n  container?.append(p);\r\n  p && (p.innerText = user.username);\r\n});\r\n        });\r\n      } else {\r\n        console.log('No user is signed in');\r\n      }\r\n    });\r\n  };\r\n  \r\n  \r\nwindow.addEventListener('load', main);\r\n\r\n\r\n\r\n\r\n//Skapa inlägg\r\ndocument.getElementById('postBtn')?.addEventListener('click', async (event) => {\r\n  event.preventDefault(); \r\n\r\n  const auth = getAuth();\r\n  const currentUser = auth.currentUser;\r\n  if (currentUser) {\r\n    const userId = currentUser.uid;\r\n    const contentInput = document.getElementById('postContent') as HTMLInputElement;\r\n    const content = contentInput.value;\r\n\r\n    if (content) {\r\n      await createPost(userId, content);\r\n      contentInput.value = ''; \r\n    } else {\r\n      console.log('No content provided');\r\n    }\r\n  } else {\r\n    console.log('No user is signed in');\r\n  }\r\n});\r\n\r\n\r\n//Visa inlägg\r\ninterface Post {\r\n  id: string,\r\n  userId: string;\r\n  content: string;\r\n  createdAt: string;\r\n  likes: number;\r\n}\r\n\r\nconst displayPosts = () => {\r\n  const db = getDatabase();\r\n  const postsRef = ref(db, 'posts');\r\n\r\n  onValue(postsRef, async (snapshot) => {\r\n    const posts = snapshot.val();\r\n    const postContainer = document.getElementById('postsList');\r\n\r\n    if (posts && postContainer) {\r\n      postContainer.innerHTML = ''; \r\n      \r\n      for (const [id, post] of Object.entries(posts) as [string, Post][]) {\r\n        const userSnapshot = await get(ref(db, `users/${post.userId}`));\r\n        const user = userSnapshot.val();\r\n      \r\n        const postItem = document.createElement('div');\r\n        postItem.className = 'post-item';\r\n        postItem.innerHTML = `\r\n          <h5>${user.username}</h5>\r\n          <p>${post.content}</p>\r\n          <p>${post.createdAt}</p>\r\n          <div class=\"post-actions\">\r\n          <a class=\"like-btn\" data-post-id=\"${id}\"><i class=\"far fa-heart\"></i> ${post.likes}</a>\r\n\r\n            <a class=\"reply-btn\"><i class=\"far fa-comment\"></i></a>\r\n          </div>\r\n        `;\r\n      \r\n        postContainer.appendChild(postItem);\r\n\r\n        const likeBtn = postItem.querySelector('.like-btn') as HTMLElement;\r\n        if (likeBtn) {\r\n            likeBtn.addEventListener('click', (event) => {\r\n              event.preventDefault();\r\n              handleLike(event, id, post.userId);\r\n            });\r\n          \r\n        }\r\n        \r\n      }\r\n    }\r\n  })\r\n};\r\n\r\n\r\n\r\n\r\nasync function handleLike(event: Event, postId: string, userId: string) {\r\n  event.preventDefault();\r\n  \r\n  const db = getDatabase();\r\n  \r\n  // Fetch current likes count\r\n  const postSnapshot = await get(ref(db, `posts/${postId}`));\r\n  const postData = postSnapshot.val();\r\n\r\n  if (postData) {\r\n    const currentLikes = postData.likes;\r\n\r\n    // Update the likes count in the database\r\n    const updatedLikes = currentLikes + 1;\r\n    await updateLikes(event, postId, updatedLikes);\r\n\r\n     // Toggle the liked class for the heart icon\r\n     const likeButton = event.target as HTMLElement;\r\n     const heartIcon = likeButton.querySelector('i');\r\n     if (heartIcon) {\r\n       if (heartIcon.style.color === 'red') {\r\n         heartIcon.style.color = '';\r\n       } else {\r\n         heartIcon.style.color = 'red';\r\n       }\r\n     }\r\n     likeButton.textContent = ` Likes: ${updatedLikes}`;\r\n   } else {\r\n     console.error(`Unable to find post data for post ID: ${postId}`);\r\n   }\r\n }\r\n\r\n\r\n\r\n","function assertNonEmptyString (str) {\n  if (typeof str !== 'string' || !str) {\n    throw new Error('expected a non-empty string, got: ' + str)\n  }\n}\n\nfunction assertNumber (number) {\n  if (typeof number !== 'number') {\n    throw new Error('expected a number, got: ' + number)\n  }\n}\n\nconst DB_VERSION_CURRENT = 1;\nconst DB_VERSION_INITIAL = 1;\nconst STORE_EMOJI = 'emoji';\nconst STORE_KEYVALUE = 'keyvalue';\nconst STORE_FAVORITES = 'favorites';\nconst FIELD_TOKENS = 'tokens';\nconst INDEX_TOKENS = 'tokens';\nconst FIELD_UNICODE = 'unicode';\nconst INDEX_COUNT = 'count';\nconst FIELD_GROUP = 'group';\nconst FIELD_ORDER = 'order';\nconst INDEX_GROUP_AND_ORDER = 'group-order';\nconst KEY_ETAG = 'eTag';\nconst KEY_URL = 'url';\nconst KEY_PREFERRED_SKINTONE = 'skinTone';\nconst MODE_READONLY = 'readonly';\nconst MODE_READWRITE = 'readwrite';\nconst INDEX_SKIN_UNICODE = 'skinUnicodes';\nconst FIELD_SKIN_UNICODE = 'skinUnicodes';\n\nconst DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json';\nconst DEFAULT_LOCALE = 'en';\n\n// like lodash's uniqBy but much smaller\nfunction uniqBy (arr, func) {\n  const set = new Set();\n  const res = [];\n  for (const item of arr) {\n    const key = func(item);\n    if (!set.has(key)) {\n      set.add(key);\n      res.push(item);\n    }\n  }\n  return res\n}\n\nfunction uniqEmoji (emojis) {\n  return uniqBy(emojis, _ => _.unicode)\n}\n\nfunction initialMigration (db) {\n  function createObjectStore (name, keyPath, indexes) {\n    const store = keyPath\n      ? db.createObjectStore(name, { keyPath })\n      : db.createObjectStore(name);\n    if (indexes) {\n      for (const [indexName, [keyPath, multiEntry]] of Object.entries(indexes)) {\n        store.createIndex(indexName, keyPath, { multiEntry });\n      }\n    }\n    return store\n  }\n\n  createObjectStore(STORE_KEYVALUE);\n  createObjectStore(STORE_EMOJI, /* keyPath */ FIELD_UNICODE, {\n    [INDEX_TOKENS]: [FIELD_TOKENS, /* multiEntry */ true],\n    [INDEX_GROUP_AND_ORDER]: [[FIELD_GROUP, FIELD_ORDER]],\n    [INDEX_SKIN_UNICODE]: [FIELD_SKIN_UNICODE, /* multiEntry */ true]\n  });\n  createObjectStore(STORE_FAVORITES, undefined, {\n    [INDEX_COUNT]: ['']\n  });\n}\n\nconst openIndexedDBRequests = {};\nconst databaseCache = {};\nconst onCloseListeners = {};\n\nfunction handleOpenOrDeleteReq (resolve, reject, req) {\n  // These things are almost impossible to test with fakeIndexedDB sadly\n  /* istanbul ignore next */\n  req.onerror = () => reject(req.error);\n  /* istanbul ignore next */\n  req.onblocked = () => reject(new Error('IDB blocked'));\n  req.onsuccess = () => resolve(req.result);\n}\n\nasync function createDatabase (dbName) {\n  const db = await new Promise((resolve, reject) => {\n    const req = indexedDB.open(dbName, DB_VERSION_CURRENT);\n    openIndexedDBRequests[dbName] = req;\n    req.onupgradeneeded = e => {\n      // Technically there is only one version, so we don't need this `if` check\n      // But if an old version of the JS is in another browser tab\n      // and it gets upgraded in the future and we have a new DB version, well...\n      // better safe than sorry.\n      /* istanbul ignore else */\n      if (e.oldVersion < DB_VERSION_INITIAL) {\n        initialMigration(req.result);\n      }\n    };\n    handleOpenOrDeleteReq(resolve, reject, req);\n  });\n  // Handle abnormal closes, e.g. \"delete database\" in chrome dev tools.\n  // No need for removeEventListener, because once the DB can no longer\n  // fire \"close\" events, it will auto-GC.\n  // Unfortunately cannot test in fakeIndexedDB: https://github.com/dumbmatter/fakeIndexedDB/issues/50\n  /* istanbul ignore next */\n  db.onclose = () => closeDatabase(dbName);\n  return db\n}\n\nfunction openDatabase (dbName) {\n  if (!databaseCache[dbName]) {\n    databaseCache[dbName] = createDatabase(dbName);\n  }\n  return databaseCache[dbName]\n}\n\nfunction dbPromise (db, storeName, readOnlyOrReadWrite, cb) {\n  return new Promise((resolve, reject) => {\n    // Use relaxed durability because neither the emoji data nor the favorites/preferred skin tone\n    // are really irreplaceable data. IndexedDB is just a cache in this case.\n    const txn = db.transaction(storeName, readOnlyOrReadWrite, { durability: 'relaxed' });\n    const store = typeof storeName === 'string'\n      ? txn.objectStore(storeName)\n      : storeName.map(name => txn.objectStore(name));\n    let res;\n    cb(store, txn, (result) => {\n      res = result;\n    });\n\n    txn.oncomplete = () => resolve(res);\n    /* istanbul ignore next */\n    txn.onerror = () => reject(txn.error);\n  })\n}\n\nfunction closeDatabase (dbName) {\n  // close any open requests\n  const req = openIndexedDBRequests[dbName];\n  const db = req && req.result;\n  if (db) {\n    db.close();\n    const listeners = onCloseListeners[dbName];\n    /* istanbul ignore else */\n    if (listeners) {\n      for (const listener of listeners) {\n        listener();\n      }\n    }\n  }\n  delete openIndexedDBRequests[dbName];\n  delete databaseCache[dbName];\n  delete onCloseListeners[dbName];\n}\n\nfunction deleteDatabase (dbName) {\n  return new Promise((resolve, reject) => {\n    // close any open requests\n    closeDatabase(dbName);\n    const req = indexedDB.deleteDatabase(dbName);\n    handleOpenOrDeleteReq(resolve, reject, req);\n  })\n}\n\n// The \"close\" event occurs during an abnormal shutdown, e.g. a user clearing their browser data.\n// However, it doesn't occur with the normal \"close\" event, so we handle that separately.\n// https://www.w3.org/TR/IndexedDB/#close-a-database-connection\nfunction addOnCloseListener (dbName, listener) {\n  let listeners = onCloseListeners[dbName];\n  if (!listeners) {\n    listeners = onCloseListeners[dbName] = [];\n  }\n  listeners.push(listener);\n}\n\n// list of emoticons that don't match a simple \\W+ regex\n// extracted using:\n// require('emoji-picker-element-data/en/emojibase/data.json').map(_ => _.emoticon).filter(Boolean).filter(_ => !/^\\W+$/.test(_))\nconst irregularEmoticons = new Set([\n  ':D', 'XD', \":'D\", 'O:)',\n  ':X', ':P', ';P', 'XP',\n  ':L', ':Z', ':j', '8D',\n  'XO', '8)', ':B', ':O',\n  ':S', \":'o\", 'Dx', 'X(',\n  'D:', ':C', '>0)', ':3',\n  '</3', '<3', '\\\\M/', ':E',\n  '8#'\n]);\n\nfunction extractTokens (str) {\n  return str\n    .split(/[\\s_]+/)\n    .map(word => {\n      if (!word.match(/\\w/) || irregularEmoticons.has(word)) {\n        // for pure emoticons like :) or :-), just leave them as-is\n        return word.toLowerCase()\n      }\n\n      return word\n        .replace(/[)(:,]/g, '')\n        .replace(/’/g, \"'\")\n        .toLowerCase()\n    }).filter(Boolean)\n}\n\nconst MIN_SEARCH_TEXT_LENGTH = 2;\n\n// This is an extra step in addition to extractTokens(). The difference here is that we expect\n// the input to have already been run through extractTokens(). This is useful for cases like\n// emoticons, where we don't want to do any tokenization (because it makes no sense to split up\n// \">:)\" by the colon) but we do want to lowercase it to have consistent search results, so that\n// the user can type ':P' or ':p' and still get the same result.\nfunction normalizeTokens (str) {\n  return str\n    .filter(Boolean)\n    .map(_ => _.toLowerCase())\n    .filter(_ => _.length >= MIN_SEARCH_TEXT_LENGTH)\n}\n\n// Transform emoji data for storage in IDB\nfunction transformEmojiData (emojiData) {\n  const res = emojiData.map(({ annotation, emoticon, group, order, shortcodes, skins, tags, emoji, version }) => {\n    const tokens = [...new Set(\n      normalizeTokens([\n        ...(shortcodes || []).map(extractTokens).flat(),\n        ...tags.map(extractTokens).flat(),\n        ...extractTokens(annotation),\n        emoticon\n      ])\n    )].sort();\n    const res = {\n      annotation,\n      group,\n      order,\n      tags,\n      tokens,\n      unicode: emoji,\n      version\n    };\n    if (emoticon) {\n      res.emoticon = emoticon;\n    }\n    if (shortcodes) {\n      res.shortcodes = shortcodes;\n    }\n    if (skins) {\n      res.skinTones = [];\n      res.skinUnicodes = [];\n      res.skinVersions = [];\n      for (const { tone, emoji, version } of skins) {\n        res.skinTones.push(tone);\n        res.skinUnicodes.push(emoji);\n        res.skinVersions.push(version);\n      }\n    }\n    return res\n  });\n  return res\n}\n\n// helper functions that help compress the code better\n\nfunction callStore (store, method, key, cb) {\n  store[method](key).onsuccess = e => (cb && cb(e.target.result));\n}\n\nfunction getIDB (store, key, cb) {\n  callStore(store, 'get', key, cb);\n}\n\nfunction getAllIDB (store, key, cb) {\n  callStore(store, 'getAll', key, cb);\n}\n\nfunction commit (txn) {\n  /* istanbul ignore else */\n  if (txn.commit) {\n    txn.commit();\n  }\n}\n\n// like lodash's minBy\nfunction minBy (array, func) {\n  let minItem = array[0];\n  for (let i = 1; i < array.length; i++) {\n    const item = array[i];\n    if (func(minItem) > func(item)) {\n      minItem = item;\n    }\n  }\n  return minItem\n}\n\n// return an array of results representing all items that are found in each one of the arrays\n\nfunction findCommonMembers (arrays, uniqByFunc) {\n  const shortestArray = minBy(arrays, _ => _.length);\n  const results = [];\n  for (const item of shortestArray) {\n    // if this item is included in every array in the intermediate results, add it to the final results\n    if (!arrays.some(array => array.findIndex(_ => uniqByFunc(_) === uniqByFunc(item)) === -1)) {\n      results.push(item);\n    }\n  }\n  return results\n}\n\nasync function isEmpty (db) {\n  return !(await get(db, STORE_KEYVALUE, KEY_URL))\n}\n\nasync function hasData (db, url, eTag) {\n  const [oldETag, oldUrl] = await Promise.all([KEY_ETAG, KEY_URL]\n    .map(key => get(db, STORE_KEYVALUE, key)));\n  return (oldETag === eTag && oldUrl === url)\n}\n\nasync function doFullDatabaseScanForSingleResult (db, predicate) {\n  // This batching algorithm is just a perf improvement over a basic\n  // cursor. The BATCH_SIZE is an estimate of what would give the best\n  // perf for doing a full DB scan (worst case).\n  //\n  // Mini-benchmark for determining the best batch size:\n  //\n  // PERF=1 yarn build:rollup && yarn test:adhoc\n  //\n  // (async () => {\n  //   performance.mark('start')\n  //   await $('emoji-picker').database.getEmojiByShortcode('doesnotexist')\n  //   performance.measure('total', 'start')\n  //   console.log(performance.getEntriesByName('total').slice(-1)[0].duration)\n  // })()\n  const BATCH_SIZE = 50; // Typically around 150ms for 6x slowdown in Chrome for above benchmark\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    let lastKey;\n\n    const processNextBatch = () => {\n      emojiStore.getAll(lastKey && IDBKeyRange.lowerBound(lastKey, true), BATCH_SIZE).onsuccess = e => {\n        const results = e.target.result;\n        for (const result of results) {\n          lastKey = result.unicode;\n          if (predicate(result)) {\n            return cb(result)\n          }\n        }\n        if (results.length < BATCH_SIZE) {\n          return cb()\n        }\n        processNextBatch();\n      };\n    };\n    processNextBatch();\n  })\n}\n\nasync function loadData (db, emojiData, url, eTag) {\n  try {\n    const transformedData = transformEmojiData(emojiData);\n    await dbPromise(db, [STORE_EMOJI, STORE_KEYVALUE], MODE_READWRITE, ([emojiStore, metaStore], txn) => {\n      let oldETag;\n      let oldUrl;\n      let todo = 0;\n\n      function checkFetched () {\n        if (++todo === 2) { // 2 requests made\n          onFetched();\n        }\n      }\n\n      function onFetched () {\n        if (oldETag === eTag && oldUrl === url) {\n          // check again within the transaction to guard against concurrency, e.g. multiple browser tabs\n          return\n        }\n        // delete old data\n        emojiStore.clear();\n        // insert new data\n        for (const data of transformedData) {\n          emojiStore.put(data);\n        }\n        metaStore.put(eTag, KEY_ETAG);\n        metaStore.put(url, KEY_URL);\n        commit(txn);\n      }\n\n      getIDB(metaStore, KEY_ETAG, result => {\n        oldETag = result;\n        checkFetched();\n      });\n\n      getIDB(metaStore, KEY_URL, result => {\n        oldUrl = result;\n        checkFetched();\n      });\n    });\n  } finally {\n  }\n}\n\nasync function getEmojiByGroup (db, group) {\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    const range = IDBKeyRange.bound([group, 0], [group + 1, 0], false, true);\n    getAllIDB(emojiStore.index(INDEX_GROUP_AND_ORDER), range, cb);\n  })\n}\n\nasync function getEmojiBySearchQuery (db, query) {\n  const tokens = normalizeTokens(extractTokens(query));\n\n  if (!tokens.length) {\n    return []\n  }\n\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => {\n    // get all results that contain all tokens (i.e. an AND query)\n    const intermediateResults = [];\n\n    const checkDone = () => {\n      if (intermediateResults.length === tokens.length) {\n        onDone();\n      }\n    };\n\n    const onDone = () => {\n      const results = findCommonMembers(intermediateResults, _ => _.unicode);\n      cb(results.sort((a, b) => a.order < b.order ? -1 : 1));\n    };\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      const range = i === tokens.length - 1\n        ? IDBKeyRange.bound(token, token + '\\uffff', false, true) // treat last token as a prefix search\n        : IDBKeyRange.only(token); // treat all other tokens as an exact match\n      getAllIDB(emojiStore.index(INDEX_TOKENS), range, result => {\n        intermediateResults.push(result);\n        checkDone();\n      });\n    }\n  })\n}\n\n// This could have been implemented as an IDB index on shortcodes, but it seemed wasteful to do that\n// when we can already query by tokens and this will give us what we're looking for 99.9% of the time\nasync function getEmojiByShortcode (db, shortcode) {\n  const emojis = await getEmojiBySearchQuery(db, shortcode);\n\n  // In very rare cases (e.g. the shortcode \"v\" as in \"v for victory\"), we cannot search because\n  // there are no usable tokens (too short in this case). In that case, we have to do an inefficient\n  // full-database scan, which I believe is an acceptable tradeoff for not having to have an extra\n  // index on shortcodes.\n\n  if (!emojis.length) {\n    const predicate = _ => ((_.shortcodes || []).includes(shortcode.toLowerCase()));\n    return (await doFullDatabaseScanForSingleResult(db, predicate)) || null\n  }\n\n  return emojis.filter(_ => {\n    const lowerShortcodes = (_.shortcodes || []).map(_ => _.toLowerCase());\n    return lowerShortcodes.includes(shortcode.toLowerCase())\n  })[0] || null\n}\n\nasync function getEmojiByUnicode (db, unicode) {\n  return dbPromise(db, STORE_EMOJI, MODE_READONLY, (emojiStore, txn, cb) => (\n    getIDB(emojiStore, unicode, result => {\n      if (result) {\n        return cb(result)\n      }\n      getIDB(emojiStore.index(INDEX_SKIN_UNICODE), unicode, result => cb(result || null));\n    })\n  ))\n}\n\nfunction get (db, storeName, key) {\n  return dbPromise(db, storeName, MODE_READONLY, (store, txn, cb) => (\n    getIDB(store, key, cb)\n  ))\n}\n\nfunction set (db, storeName, key, value) {\n  return dbPromise(db, storeName, MODE_READWRITE, (store, txn) => {\n    store.put(value, key);\n    commit(txn);\n  })\n}\n\nfunction incrementFavoriteEmojiCount (db, unicode) {\n  return dbPromise(db, STORE_FAVORITES, MODE_READWRITE, (store, txn) => (\n    getIDB(store, unicode, result => {\n      store.put((result || 0) + 1, unicode);\n      commit(txn);\n    })\n  ))\n}\n\nfunction getTopFavoriteEmoji (db, customEmojiIndex, limit) {\n  if (limit === 0) {\n    return []\n  }\n  return dbPromise(db, [STORE_FAVORITES, STORE_EMOJI], MODE_READONLY, ([favoritesStore, emojiStore], txn, cb) => {\n    const results = [];\n    favoritesStore.index(INDEX_COUNT).openCursor(undefined, 'prev').onsuccess = e => {\n      const cursor = e.target.result;\n      if (!cursor) { // no more results\n        return cb(results)\n      }\n\n      function addResult (result) {\n        results.push(result);\n        if (results.length === limit) {\n          return cb(results) // done, reached the limit\n        }\n        cursor.continue();\n      }\n\n      const unicodeOrName = cursor.primaryKey;\n      const custom = customEmojiIndex.byName(unicodeOrName);\n      if (custom) {\n        return addResult(custom)\n      }\n      // This could be done in parallel (i.e. make the cursor and the get()s parallelized),\n      // but my testing suggests it's not actually faster.\n      getIDB(emojiStore, unicodeOrName, emoji => {\n        if (emoji) {\n          return addResult(emoji)\n        }\n        // emoji not found somehow, ignore (may happen if custom emoji change)\n        cursor.continue();\n      });\n    };\n  })\n}\n\n// trie data structure for prefix searches\n// loosely based on https://github.com/nolanlawson/substring-trie\n\nconst CODA_MARKER = ''; // marks the end of the string\n\nfunction trie (arr, itemToTokens) {\n  const map = new Map();\n  for (const item of arr) {\n    const tokens = itemToTokens(item);\n    for (const token of tokens) {\n      let currentMap = map;\n      for (let i = 0; i < token.length; i++) {\n        const char = token.charAt(i);\n        let nextMap = currentMap.get(char);\n        if (!nextMap) {\n          nextMap = new Map();\n          currentMap.set(char, nextMap);\n        }\n        currentMap = nextMap;\n      }\n      let valuesAtCoda = currentMap.get(CODA_MARKER);\n      if (!valuesAtCoda) {\n        valuesAtCoda = [];\n        currentMap.set(CODA_MARKER, valuesAtCoda);\n      }\n      valuesAtCoda.push(item);\n    }\n  }\n\n  const search = (query, exact) => {\n    let currentMap = map;\n    for (let i = 0; i < query.length; i++) {\n      const char = query.charAt(i);\n      const nextMap = currentMap.get(char);\n      if (nextMap) {\n        currentMap = nextMap;\n      } else {\n        return []\n      }\n    }\n\n    if (exact) {\n      const results = currentMap.get(CODA_MARKER);\n      return results || []\n    }\n\n    const results = [];\n    // traverse\n    const queue = [currentMap];\n    while (queue.length) {\n      const currentMap = queue.shift();\n      const entriesSortedByKey = [...currentMap.entries()].sort((a, b) => a[0] < b[0] ? -1 : 1);\n      for (const [key, value] of entriesSortedByKey) {\n        if (key === CODA_MARKER) { // CODA_MARKER always comes first; it's the empty string\n          results.push(...value);\n        } else {\n          queue.push(value);\n        }\n      }\n    }\n    return results\n  };\n\n  return search\n}\n\nconst requiredKeys$1 = [\n  'name',\n  'url'\n];\n\nfunction assertCustomEmojis (customEmojis) {\n  const isArray = customEmojis && Array.isArray(customEmojis);\n  const firstItemIsFaulty = isArray &&\n    customEmojis.length &&\n    (!customEmojis[0] || requiredKeys$1.some(key => !(key in customEmojis[0])));\n  if (!isArray || firstItemIsFaulty) {\n    throw new Error('Custom emojis are in the wrong format')\n  }\n}\n\nfunction customEmojiIndex (customEmojis) {\n  assertCustomEmojis(customEmojis);\n\n  const sortByName = (a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;\n\n  //\n  // all()\n  //\n  const all = customEmojis.sort(sortByName);\n\n  //\n  // search()\n  //\n  const emojiToTokens = emoji => (\n    [...new Set((emoji.shortcodes || []).map(shortcode => extractTokens(shortcode)).flat())]\n  );\n  const searchTrie = trie(customEmojis, emojiToTokens);\n  const searchByExactMatch = _ => searchTrie(_, true);\n  const searchByPrefix = _ => searchTrie(_, false);\n\n  // Search by query for custom emoji. Similar to how we do this in IDB, the last token\n  // is treated as a prefix search, but every other one is treated as an exact match.\n  // Then we AND the results together\n  const search = query => {\n    const tokens = extractTokens(query);\n    const intermediateResults = tokens.map((token, i) => (\n      (i < tokens.length - 1 ? searchByExactMatch : searchByPrefix)(token)\n    ));\n    return findCommonMembers(intermediateResults, _ => _.name).sort(sortByName)\n  };\n\n  //\n  // byShortcode, byName\n  //\n  const shortcodeToEmoji = new Map();\n  const nameToEmoji = new Map();\n  for (const customEmoji of customEmojis) {\n    nameToEmoji.set(customEmoji.name.toLowerCase(), customEmoji);\n    for (const shortcode of (customEmoji.shortcodes || [])) {\n      shortcodeToEmoji.set(shortcode.toLowerCase(), customEmoji);\n    }\n  }\n\n  const byShortcode = shortcode => shortcodeToEmoji.get(shortcode.toLowerCase());\n  const byName = name => nameToEmoji.get(name.toLowerCase());\n\n  return {\n    all,\n    search,\n    byShortcode,\n    byName\n  }\n}\n\n// remove some internal implementation details, i.e. the \"tokens\" array on the emoji object\n// essentially, convert the emoji from the version stored in IDB to the version used in-memory\nfunction cleanEmoji (emoji) {\n  if (!emoji) {\n    return emoji\n  }\n  delete emoji.tokens;\n  if (emoji.skinTones) {\n    const len = emoji.skinTones.length;\n    emoji.skins = Array(len);\n    for (let i = 0; i < len; i++) {\n      emoji.skins[i] = {\n        tone: emoji.skinTones[i],\n        unicode: emoji.skinUnicodes[i],\n        version: emoji.skinVersions[i]\n      };\n    }\n    delete emoji.skinTones;\n    delete emoji.skinUnicodes;\n    delete emoji.skinVersions;\n  }\n  return emoji\n}\n\nfunction warnETag (eTag) {\n  if (!eTag) {\n    console.warn('emoji-picker-element is more efficient if the dataSource server exposes an ETag header.');\n  }\n}\n\nconst requiredKeys = [\n  'annotation',\n  'emoji',\n  'group',\n  'order',\n  'tags',\n  'version'\n];\n\nfunction assertEmojiData (emojiData) {\n  if (!emojiData ||\n    !Array.isArray(emojiData) ||\n    !emojiData[0] ||\n    (typeof emojiData[0] !== 'object') ||\n    requiredKeys.some(key => (!(key in emojiData[0])))) {\n    throw new Error('Emoji data is in the wrong format')\n  }\n}\n\nfunction assertStatus (response, dataSource) {\n  if (Math.floor(response.status / 100) !== 2) {\n    throw new Error('Failed to fetch: ' + dataSource + ':  ' + response.status)\n  }\n}\n\nasync function getETag (dataSource) {\n  const response = await fetch(dataSource, { method: 'HEAD' });\n  assertStatus(response, dataSource);\n  const eTag = response.headers.get('etag');\n  warnETag(eTag);\n  return eTag\n}\n\nasync function getETagAndData (dataSource) {\n  const response = await fetch(dataSource);\n  assertStatus(response, dataSource);\n  const eTag = response.headers.get('etag');\n  warnETag(eTag);\n  const emojiData = await response.json();\n  assertEmojiData(emojiData);\n  return [eTag, emojiData]\n}\n\n// TODO: including these in blob-util.ts causes typedoc to generate docs for them,\n/**\n * Convert an `ArrayBuffer` to a binary string.\n *\n * Example:\n *\n * ```js\n * var myString = blobUtil.arrayBufferToBinaryString(arrayBuff)\n * ```\n *\n * @param buffer - array buffer\n * @returns binary string\n */\nfunction arrayBufferToBinaryString(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var length = bytes.byteLength;\n    var i = -1;\n    while (++i < length) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return binary;\n}\n/**\n * Convert a binary string to an `ArrayBuffer`.\n *\n * ```js\n * var myBuffer = blobUtil.binaryStringToArrayBuffer(binaryString)\n * ```\n *\n * @param binary - binary string\n * @returns array buffer\n */\nfunction binaryStringToArrayBuffer(binary) {\n    var length = binary.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    var i = -1;\n    while (++i < length) {\n        arr[i] = binary.charCodeAt(i);\n    }\n    return buf;\n}\n\n// generate a checksum based on the stringified JSON\nasync function jsonChecksum (object) {\n  const inString = JSON.stringify(object);\n  const inBuffer = binaryStringToArrayBuffer(inString);\n  // this does not need to be cryptographically secure, SHA-1 is fine\n  const outBuffer = await crypto.subtle.digest('SHA-1', inBuffer);\n  const outBinString = arrayBufferToBinaryString(outBuffer);\n  const res = btoa(outBinString);\n  return res\n}\n\nasync function checkForUpdates (db, dataSource) {\n  // just do a simple HEAD request first to see if the eTags match\n  let emojiData;\n  let eTag = await getETag(dataSource);\n  if (!eTag) { // work around lack of ETag/Access-Control-Expose-Headers\n    const eTagAndData = await getETagAndData(dataSource);\n    eTag = eTagAndData[0];\n    emojiData = eTagAndData[1];\n    if (!eTag) {\n      eTag = await jsonChecksum(emojiData);\n    }\n  }\n  if (await hasData(db, dataSource, eTag)) ; else {\n    if (!emojiData) {\n      const eTagAndData = await getETagAndData(dataSource);\n      emojiData = eTagAndData[1];\n    }\n    await loadData(db, emojiData, dataSource, eTag);\n  }\n}\n\nasync function loadDataForFirstTime (db, dataSource) {\n  let [eTag, emojiData] = await getETagAndData(dataSource);\n  if (!eTag) {\n    // Handle lack of support for ETag or Access-Control-Expose-Headers\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers#Browser_compatibility\n    eTag = await jsonChecksum(emojiData);\n  }\n\n  await loadData(db, emojiData, dataSource, eTag);\n}\n\nclass Database {\n  constructor ({ dataSource = DEFAULT_DATA_SOURCE, locale = DEFAULT_LOCALE, customEmoji = [] } = {}) {\n    this.dataSource = dataSource;\n    this.locale = locale;\n    this._dbName = `emoji-picker-element-${this.locale}`;\n    this._db = undefined;\n    this._lazyUpdate = undefined;\n    this._custom = customEmojiIndex(customEmoji);\n\n    this._clear = this._clear.bind(this);\n    this._ready = this._init();\n  }\n\n  async _init () {\n    const db = this._db = await openDatabase(this._dbName);\n\n    addOnCloseListener(this._dbName, this._clear);\n    const dataSource = this.dataSource;\n    const empty = await isEmpty(db);\n\n    if (empty) {\n      await loadDataForFirstTime(db, dataSource);\n    } else { // offline-first - do an update asynchronously\n      this._lazyUpdate = checkForUpdates(db, dataSource);\n    }\n  }\n\n  async ready () {\n    const checkReady = async () => {\n      if (!this._ready) {\n        this._ready = this._init();\n      }\n      return this._ready\n    };\n    await checkReady();\n    // There's a possibility of a race condition where the element gets added, removed, and then added again\n    // with a particular timing, which would set the _db to undefined.\n    // We *could* do a while loop here, but that seems excessive and could lead to an infinite loop.\n    if (!this._db) {\n      await checkReady();\n    }\n  }\n\n  async getEmojiByGroup (group) {\n    assertNumber(group);\n    await this.ready();\n    return uniqEmoji(await getEmojiByGroup(this._db, group)).map(cleanEmoji)\n  }\n\n  async getEmojiBySearchQuery (query) {\n    assertNonEmptyString(query);\n    await this.ready();\n    const customs = this._custom.search(query);\n    const natives = uniqEmoji(await getEmojiBySearchQuery(this._db, query)).map(cleanEmoji);\n    return [\n      ...customs,\n      ...natives\n    ]\n  }\n\n  async getEmojiByShortcode (shortcode) {\n    assertNonEmptyString(shortcode);\n    await this.ready();\n    const custom = this._custom.byShortcode(shortcode);\n    if (custom) {\n      return custom\n    }\n    return cleanEmoji(await getEmojiByShortcode(this._db, shortcode))\n  }\n\n  async getEmojiByUnicodeOrName (unicodeOrName) {\n    assertNonEmptyString(unicodeOrName);\n    await this.ready();\n    const custom = this._custom.byName(unicodeOrName);\n    if (custom) {\n      return custom\n    }\n    return cleanEmoji(await getEmojiByUnicode(this._db, unicodeOrName))\n  }\n\n  async getPreferredSkinTone () {\n    await this.ready();\n    return (await get(this._db, STORE_KEYVALUE, KEY_PREFERRED_SKINTONE)) || 0\n  }\n\n  async setPreferredSkinTone (skinTone) {\n    assertNumber(skinTone);\n    await this.ready();\n    return set(this._db, STORE_KEYVALUE, KEY_PREFERRED_SKINTONE, skinTone)\n  }\n\n  async incrementFavoriteEmojiCount (unicodeOrName) {\n    assertNonEmptyString(unicodeOrName);\n    await this.ready();\n    return incrementFavoriteEmojiCount(this._db, unicodeOrName)\n  }\n\n  async getTopFavoriteEmoji (limit) {\n    assertNumber(limit);\n    await this.ready();\n    return (await getTopFavoriteEmoji(this._db, this._custom, limit)).map(cleanEmoji)\n  }\n\n  set customEmoji (customEmojis) {\n    this._custom = customEmojiIndex(customEmojis);\n  }\n\n  get customEmoji () {\n    return this._custom.all\n  }\n\n  async _shutdown () {\n    await this.ready(); // reopen if we've already been closed/deleted\n    try {\n      await this._lazyUpdate; // allow any lazy updates to process before closing/deleting\n    } catch (err) { /* ignore network errors (offline-first) */ }\n  }\n\n  // clear references to IDB, e.g. during a close event\n  _clear () {\n    // We don't need to call removeEventListener or remove the manual \"close\" listeners.\n    // The memory leak tests prove this is unnecessary. It's because:\n    // 1) IDBDatabases that can no longer fire \"close\" automatically have listeners GCed\n    // 2) we clear the manual close listeners in databaseLifecycle.js.\n    this._db = this._ready = this._lazyUpdate = undefined;\n  }\n\n  async close () {\n    await this._shutdown();\n    await closeDatabase(this._dbName);\n  }\n\n  async delete () {\n    await this._shutdown();\n    await deleteDatabase(this._dbName);\n  }\n}\n\nexport { Database as default };\n","import Database from './database.js';\n\nfunction noop() { }\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\nconst outroing = new Set();\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map((parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        mount_component(component, options.target, undefined, undefined);\n        flush();\n    }\n    set_current_component(parent_component);\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\n// via https://unpkg.com/browse/emojibase-data@6.0.0/meta/groups.json\nconst allGroups = [\n  [-1, '✨', 'custom'],\n  [0, '😀', 'smileys-emotion'],\n  [1, '👋', 'people-body'],\n  [3, '🐱', 'animals-nature'],\n  [4, '🍎', 'food-drink'],\n  [5, '🏠️', 'travel-places'],\n  [6, '⚽', 'activities'],\n  [7, '📝', 'objects'],\n  [8, '⛔️', 'symbols'],\n  [9, '🏁', 'flags']\n].map(([id, emoji, name]) => ({ id, emoji, name }));\n\nconst groups = allGroups.slice(1);\nconst customGroup = allGroups[0];\n\nconst MIN_SEARCH_TEXT_LENGTH = 2;\nconst NUM_SKIN_TONES = 6;\n\n/* istanbul ignore next */\nconst rIC = typeof requestIdleCallback === 'function' ? requestIdleCallback : setTimeout;\n\n// check for ZWJ (zero width joiner) character\nfunction hasZwj (emoji) {\n  return emoji.unicode.includes('\\u200d')\n}\n\n// Find one good representative emoji from each version to test by checking its color.\n// Ideally it should have color in the center. For some inspiration, see:\n// https://about.gitlab.com/blog/2018/05/30/journey-in-native-unicode-emoji/\n//\n// Note that for certain versions (12.1, 13.1), there is no point in testing them explicitly, because\n// all the emoji from this version are compound-emoji from previous versions. So they would pass a color\n// test, even in browsers that display them as double emoji. (E.g. \"face in clouds\" might render as\n// \"face without mouth\" plus \"fog\".) These emoji can only be filtered using the width test,\n// which happens in checkZwjSupport.js.\nconst versionsAndTestEmoji = {\n  '🫠': 14,\n  '🥲': 13.1, // smiling face with tear, technically from v13 but see note above\n  '🥻': 12.1, // sari, technically from v12 but see note above\n  '🥰': 11,\n  '🤩': 5,\n  '👱‍♀️': 4,\n  '🤣': 3,\n  '👁️‍🗨️': 2,\n  '😀': 1,\n  '😐️': 0.7,\n  '😃': 0.6\n};\n\nconst TIMEOUT_BEFORE_LOADING_MESSAGE = 1000; // 1 second\nconst DEFAULT_SKIN_TONE_EMOJI = '🖐️';\nconst DEFAULT_NUM_COLUMNS = 8;\n\n// Based on https://fivethirtyeight.com/features/the-100-most-used-emojis/ and\n// https://blog.emojipedia.org/facebook-reveals-most-and-least-used-emojis/ with\n// a bit of my own curation. (E.g. avoid the \"OK\" gesture because of connotations:\n// https://emojipedia.org/ok-hand/)\nconst MOST_COMMONLY_USED_EMOJI = [\n  '😊',\n  '😒',\n  '♥️',\n  '👍️',\n  '😍',\n  '😂',\n  '😭',\n  '☺️',\n  '😔',\n  '😩',\n  '😏',\n  '💕',\n  '🙌',\n  '😘'\n];\n\n// It's important to list Twemoji Mozilla before everything else, because Mozilla bundles their\n// own font on some platforms (notably Windows and Linux as of this writing). Typically, Mozilla\n// updates faster than the underlying OS, and we don't want to render older emoji in one font and\n// newer emoji in another font:\n// https://github.com/nolanlawson/emoji-picker-element/pull/268#issuecomment-1073347283\nconst FONT_FAMILY = '\"Twemoji Mozilla\",\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",' +\n  '\"Noto Color Emoji\",\"EmojiOne Color\",\"Android Emoji\",sans-serif';\n\n/* istanbul ignore next */\nconst DEFAULT_CATEGORY_SORTING = (a, b) => a < b ? -1 : a > b ? 1 : 0;\n\n// Test if an emoji is supported by rendering it to canvas and checking that the color is not black\n\nconst getTextFeature = (text, color) => {\n  const canvas = document.createElement('canvas');\n  canvas.width = canvas.height = 1;\n\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'top';\n  ctx.font = `100px ${FONT_FAMILY}`;\n  ctx.fillStyle = color;\n  ctx.scale(0.01, 0.01);\n  ctx.fillText(text, 0, 0);\n\n  return ctx.getImageData(0, 0, 1, 1).data\n};\n\nconst compareFeatures = (feature1, feature2) => {\n  const feature1Str = [...feature1].join(',');\n  const feature2Str = [...feature2].join(',');\n  // This is RGBA, so for 0,0,0, we are checking that the first RGB is not all zeroes.\n  // Most of the time when unsupported this is 0,0,0,0, but on Chrome on Mac it is\n  // 0,0,0,61 - there is a transparency here.\n  return feature1Str === feature2Str && !feature1Str.startsWith('0,0,0,')\n};\n\nfunction testColorEmojiSupported (text) {\n  // Render white and black and then compare them to each other and ensure they're the same\n  // color, and neither one is black. This shows that the emoji was rendered in color.\n  const feature1 = getTextFeature(text, '#000');\n  const feature2 = getTextFeature(text, '#fff');\n  return feature1 && feature2 && compareFeatures(feature1, feature2)\n}\n\n// rather than check every emoji ever, which would be expensive, just check some representatives from the\n\nfunction determineEmojiSupportLevel () {\n  const entries = Object.entries(versionsAndTestEmoji);\n  try {\n    // start with latest emoji and work backwards\n    for (const [emoji, version] of entries) {\n      if (testColorEmojiSupported(emoji)) {\n        return version\n      }\n    }\n  } catch (e) { // canvas error\n  } finally {\n  }\n  // In case of an error, be generous and just assume all emoji are supported (e.g. for canvas errors\n  // due to anti-fingerprinting add-ons). Better to show some gray boxes than nothing at all.\n  return entries[0][1] // first one in the list is the most recent version\n}\n\n// Check which emojis we know for sure aren't supported, based on Unicode version level\nlet promise;\nconst detectEmojiSupportLevel = () => {\n  if (!promise) {\n    // Delay so it can run while the IDB database is being created by the browser (on another thread).\n    // This helps especially with first load – we want to start pre-populating the database on the main thread,\n    // and then wait for IDB to commit everything, and while waiting we run this check.\n    promise = new Promise(resolve => (\n      rIC(() => (\n        resolve(determineEmojiSupportLevel()) // delay so ideally this can run while IDB is first populating\n      ))\n    ));\n  }\n  return promise\n};\n// determine which emojis containing ZWJ (zero width joiner) characters\n// are supported (rendered as one glyph) rather than unsupported (rendered as two or more glyphs)\nconst supportedZwjEmojis = new Map();\n\nconst VARIATION_SELECTOR = '\\ufe0f';\nconst SKINTONE_MODIFIER = '\\ud83c';\nconst ZWJ = '\\u200d';\nconst LIGHT_SKIN_TONE = 0x1F3FB;\nconst LIGHT_SKIN_TONE_MODIFIER = 0xdffb;\n\n// TODO: this is a naive implementation, we can improve it later\n// It's only used for the skintone picker, so as long as people don't customize with\n// really exotic emoji then it should work fine\nfunction applySkinTone (str, skinTone) {\n  if (skinTone === 0) {\n    return str\n  }\n  const zwjIndex = str.indexOf(ZWJ);\n  if (zwjIndex !== -1) {\n    return str.substring(0, zwjIndex) +\n      String.fromCodePoint(LIGHT_SKIN_TONE + skinTone - 1) +\n      str.substring(zwjIndex)\n  }\n  if (str.endsWith(VARIATION_SELECTOR)) {\n    str = str.substring(0, str.length - 1);\n  }\n  return str + SKINTONE_MODIFIER + String.fromCodePoint(LIGHT_SKIN_TONE_MODIFIER + skinTone - 1)\n}\n\nfunction halt (event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// Implementation left/right or up/down navigation, circling back when you\n// reach the start/end of the list\nfunction incrementOrDecrement (decrement, val, arr) {\n  val += (decrement ? -1 : 1);\n  if (val < 0) {\n    val = arr.length - 1;\n  } else if (val >= arr.length) {\n    val = 0;\n  }\n  return val\n}\n\n// like lodash's uniqBy but much smaller\nfunction uniqBy (arr, func) {\n  const set = new Set();\n  const res = [];\n  for (const item of arr) {\n    const key = func(item);\n    if (!set.has(key)) {\n      set.add(key);\n      res.push(item);\n    }\n  }\n  return res\n}\n\n// We don't need all the data on every emoji, and there are specific things we need\n// for the UI, so build a \"view model\" from the emoji object we got from the database\n\nfunction summarizeEmojisForUI (emojis, emojiSupportLevel) {\n  const toSimpleSkinsMap = skins => {\n    const res = {};\n    for (const skin of skins) {\n      // ignore arrays like [1, 2] with multiple skin tones\n      // also ignore variants that are in an unsupported emoji version\n      // (these do exist - variants from a different version than their base emoji)\n      if (typeof skin.tone === 'number' && skin.version <= emojiSupportLevel) {\n        res[skin.tone] = skin.unicode;\n      }\n    }\n    return res\n  };\n\n  return emojis.map(({ unicode, skins, shortcodes, url, name, category }) => ({\n    unicode,\n    name,\n    shortcodes,\n    url,\n    category,\n    id: unicode || name,\n    skins: skins && toSimpleSkinsMap(skins),\n    title: (shortcodes || []).join(', ')\n  }))\n}\n\n// import rAF from one place so that the bundle size is a bit smaller\nconst rAF = requestAnimationFrame;\n\n// Svelte action to calculate the width of an element and auto-update\n\nlet resizeObserverSupported = typeof ResizeObserver === 'function';\n\nfunction calculateWidth (node, onUpdate) {\n  let resizeObserver;\n  if (resizeObserverSupported) {\n    resizeObserver = new ResizeObserver(entries => (\n      onUpdate(entries[0].contentRect.width)\n    ));\n    resizeObserver.observe(node);\n  } else { // just set the width once, don't bother trying to track it\n    rAF(() => (\n      onUpdate(node.getBoundingClientRect().width)\n    ));\n  }\n\n  // cleanup function (called on destroy)\n  return {\n    destroy () {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    }\n  }\n}\n\n// get the width of the text inside of a DOM node, via https://stackoverflow.com/a/59525891/680742\nfunction calculateTextWidth (node) {\n  /* istanbul ignore else */\n  {\n    const range = document.createRange();\n    range.selectNode(node.firstChild);\n    return range.getBoundingClientRect().width\n  }\n}\n\nlet baselineEmojiWidth;\n\nfunction checkZwjSupport (zwjEmojisToCheck, baselineEmoji, emojiToDomNode) {\n  for (const emoji of zwjEmojisToCheck) {\n    const domNode = emojiToDomNode(emoji);\n    const emojiWidth = calculateTextWidth(domNode);\n    if (typeof baselineEmojiWidth === 'undefined') { // calculate the baseline emoji width only once\n      baselineEmojiWidth = calculateTextWidth(baselineEmoji);\n    }\n    // On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n    // against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n    // floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n    // So here we set the threshold at 1.8 times the size of the baseline emoji.\n    const supported = emojiWidth / 1.8 < baselineEmojiWidth;\n    supportedZwjEmojis.set(emoji.unicode, supported);\n  }\n}\n\n// Measure after style/layout are complete\n\nconst requestPostAnimationFrame = callback => {\n  rAF(() => {\n    setTimeout(callback);\n  });\n};\n\n// like lodash's uniq\n\nfunction uniq (arr) {\n  return uniqBy(arr, _ => _)\n}\n\n// Note we put this in its own function outside Picker.js to avoid Svelte doing an invalidation on the \"setter\" here.\n// At best the invalidation is useless, at worst it can cause infinite loops:\n// https://github.com/nolanlawson/emoji-picker-element/pull/180\n// https://github.com/sveltejs/svelte/issues/6521\n// Also note tabpanelElement can be null if the element is disconnected immediately after connected\nfunction resetScrollTopIfPossible (element) {\n  if (element) {\n    element.scrollTop = 0;\n  }\n}\n\n/* src/picker/components/Picker/Picker.svelte generated by Svelte v3.55.1 */\n\nconst { Map: Map_1 } = globals;\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[64] = list[i];\n\tchild_ctx[66] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[67] = list[i];\n\tchild_ctx[66] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[64] = list[i];\n\tchild_ctx[66] = i;\n\treturn child_ctx;\n}\n\nfunction get_each_context_3(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[70] = list[i];\n\treturn child_ctx;\n}\n\nfunction get_each_context_4(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[73] = list[i];\n\tchild_ctx[66] = i;\n\treturn child_ctx;\n}\n\n// (43:38) {#each skinTones as skinTone, i (skinTone)}\nfunction create_each_block_4(key_1, ctx) {\n\tlet div;\n\tlet t_value = /*skinTone*/ ctx[73] + \"\";\n\tlet t;\n\tlet div_id_value;\n\tlet div_class_value;\n\tlet div_aria_selected_value;\n\tlet div_title_value;\n\tlet div_aria_label_value;\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tattr(div, \"id\", div_id_value = \"skintone-\" + /*i*/ ctx[66]);\n\n\t\t\tattr(div, \"class\", div_class_value = \"emoji hide-focus \" + (/*i*/ ctx[66] === /*activeSkinTone*/ ctx[20]\n\t\t\t? 'active'\n\t\t\t: ''));\n\n\t\t\tattr(div, \"aria-selected\", div_aria_selected_value = /*i*/ ctx[66] === /*activeSkinTone*/ ctx[20]);\n\t\t\tattr(div, \"role\", \"option\");\n\t\t\tattr(div, \"title\", div_title_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[66]]);\n\t\t\tattr(div, \"tabindex\", \"-1\");\n\t\t\tattr(div, \"aria-label\", div_aria_label_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[66]]);\n\t\t\tthis.first = div;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, t);\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty[0] & /*skinTones*/ 512 && t_value !== (t_value = /*skinTone*/ ctx[73] + \"\")) set_data(t, t_value);\n\n\t\t\tif (dirty[0] & /*skinTones*/ 512 && div_id_value !== (div_id_value = \"skintone-\" + /*i*/ ctx[66])) {\n\t\t\t\tattr(div, \"id\", div_id_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTones, activeSkinTone*/ 1049088 && div_class_value !== (div_class_value = \"emoji hide-focus \" + (/*i*/ ctx[66] === /*activeSkinTone*/ ctx[20]\n\t\t\t? 'active'\n\t\t\t: ''))) {\n\t\t\t\tattr(div, \"class\", div_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTones, activeSkinTone*/ 1049088 && div_aria_selected_value !== (div_aria_selected_value = /*i*/ ctx[66] === /*activeSkinTone*/ ctx[20])) {\n\t\t\t\tattr(div, \"aria-selected\", div_aria_selected_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, skinTones*/ 513 && div_title_value !== (div_title_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[66]])) {\n\t\t\t\tattr(div, \"title\", div_title_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, skinTones*/ 513 && div_aria_label_value !== (div_aria_label_value = /*i18n*/ ctx[0].skinTones[/*i*/ ctx[66]])) {\n\t\t\t\tattr(div, \"aria-label\", div_aria_label_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t}\n\t};\n}\n\n// (53:33) {#each groups as group (group.id)}\nfunction create_each_block_3(key_1, ctx) {\n\tlet button;\n\tlet div;\n\tlet t_value = /*group*/ ctx[70].emoji + \"\";\n\tlet t;\n\tlet button_aria_controls_value;\n\tlet button_aria_label_value;\n\tlet button_aria_selected_value;\n\tlet button_title_value;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[50](/*group*/ ctx[70]);\n\t}\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tdiv = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tattr(div, \"class\", \"nav-emoji emoji\");\n\t\t\tattr(button, \"role\", \"tab\");\n\t\t\tattr(button, \"class\", \"nav-button\");\n\t\t\tattr(button, \"aria-controls\", button_aria_controls_value = \"tab-\" + /*group*/ ctx[70].id);\n\t\t\tattr(button, \"aria-label\", button_aria_label_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[70].name]);\n\t\t\tattr(button, \"aria-selected\", button_aria_selected_value = !/*searchMode*/ ctx[4] && /*currentGroup*/ ctx[13].id === /*group*/ ctx[70].id);\n\t\t\tattr(button, \"title\", button_title_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[70].name]);\n\t\t\tthis.first = button;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tappend(button, div);\n\t\t\tappend(div, t);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", click_handler);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty[0] & /*groups*/ 4096 && t_value !== (t_value = /*group*/ ctx[70].emoji + \"\")) set_data(t, t_value);\n\n\t\t\tif (dirty[0] & /*groups*/ 4096 && button_aria_controls_value !== (button_aria_controls_value = \"tab-\" + /*group*/ ctx[70].id)) {\n\t\t\t\tattr(button, \"aria-controls\", button_aria_controls_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, groups*/ 4097 && button_aria_label_value !== (button_aria_label_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[70].name])) {\n\t\t\t\tattr(button, \"aria-label\", button_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentGroup, groups*/ 12304 && button_aria_selected_value !== (button_aria_selected_value = !/*searchMode*/ ctx[4] && /*currentGroup*/ ctx[13].id === /*group*/ ctx[70].id)) {\n\t\t\t\tattr(button, \"aria-selected\", button_aria_selected_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n, groups*/ 4097 && button_title_value !== (button_title_value = /*i18n*/ ctx[0].categories[/*group*/ ctx[70].name])) {\n\t\t\t\tattr(button, \"title\", button_title_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (94:100) {:else}\nfunction create_else_block_1(ctx) {\n\tlet img;\n\tlet img_src_value;\n\n\treturn {\n\t\tc() {\n\t\t\timg = element(\"img\");\n\t\t\tattr(img, \"class\", \"custom-emoji\");\n\t\t\tif (!src_url_equal(img.src, img_src_value = /*emoji*/ ctx[64].url)) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", \"\");\n\t\t\tattr(img, \"loading\", \"lazy\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, img, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && !src_url_equal(img.src, img_src_value = /*emoji*/ ctx[64].url)) {\n\t\t\t\tattr(img, \"src\", img_src_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(img);\n\t\t}\n\t};\n}\n\n// (94:40) {#if emoji.unicode}\nfunction create_if_block_1(ctx) {\n\tlet t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]) + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(t_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories, currentSkinTone*/ 33024 && t_value !== (t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]) + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t);\n\t\t}\n\t};\n}\n\n// (89:53) {#each emojiWithCategory.emojis as emoji, i (emoji.id)}\nfunction create_each_block_2(key_1, ctx) {\n\tlet button;\n\tlet button_role_value;\n\tlet button_aria_selected_value;\n\tlet button_aria_label_value;\n\tlet button_title_value;\n\tlet button_class_value;\n\tlet button_id_value;\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*emoji*/ ctx[64].unicode) return create_if_block_1;\n\t\treturn create_else_block_1;\n\t}\n\n\tlet current_block_type = select_block_type(ctx);\n\tlet if_block = current_block_type(ctx);\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tif_block.c();\n\t\t\tattr(button, \"role\", button_role_value = /*searchMode*/ ctx[4] ? 'option' : 'menuitem');\n\n\t\t\tattr(button, \"aria-selected\", button_aria_selected_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i*/ ctx[66] == /*activeSearchItem*/ ctx[5]\n\t\t\t: '');\n\n\t\t\tattr(button, \"aria-label\", button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]));\n\t\t\tattr(button, \"title\", button_title_value = /*emoji*/ ctx[64].title);\n\n\t\t\tattr(button, \"class\", button_class_value = \"emoji \" + (/*searchMode*/ ctx[4] && /*i*/ ctx[66] === /*activeSearchItem*/ ctx[5]\n\t\t\t? 'active'\n\t\t\t: ''));\n\n\t\t\tattr(button, \"id\", button_id_value = \"emo-\" + /*emoji*/ ctx[64].id);\n\t\t\tthis.first = button;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tif_block.m(button, null);\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\n\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(button, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && button_role_value !== (button_role_value = /*searchMode*/ ctx[4] ? 'option' : 'menuitem')) {\n\t\t\t\tattr(button, \"role\", button_role_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem*/ 32816 && button_aria_selected_value !== (button_aria_selected_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i*/ ctx[66] == /*activeSearchItem*/ ctx[5]\n\t\t\t: '')) {\n\t\t\t\tattr(button, \"aria-selected\", button_aria_selected_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories, currentSkinTone*/ 33024 && button_aria_label_value !== (button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]))) {\n\t\t\t\tattr(button, \"aria-label\", button_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && button_title_value !== (button_title_value = /*emoji*/ ctx[64].title)) {\n\t\t\t\tattr(button, \"title\", button_title_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem*/ 32816 && button_class_value !== (button_class_value = \"emoji \" + (/*searchMode*/ ctx[4] && /*i*/ ctx[66] === /*activeSearchItem*/ ctx[5]\n\t\t\t? 'active'\n\t\t\t: ''))) {\n\t\t\t\tattr(button, \"class\", button_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && button_id_value !== (button_id_value = \"emo-\" + /*emoji*/ ctx[64].id)) {\n\t\t\t\tattr(button, \"id\", button_id_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tif_block.d();\n\t\t}\n\t};\n}\n\n// (70:36) {#each currentEmojisWithCategories as emojiWithCategory, i (emojiWithCategory.category)}\nfunction create_each_block_1(key_1, ctx) {\n\tlet div0;\n\n\tlet t_value = (/*searchMode*/ ctx[4]\n\t? /*i18n*/ ctx[0].searchResultsLabel\n\t: /*emojiWithCategory*/ ctx[67].category\n\t\t? /*emojiWithCategory*/ ctx[67].category\n\t\t: /*currentEmojisWithCategories*/ ctx[15].length > 1\n\t\t\t? /*i18n*/ ctx[0].categories.custom\n\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name]) + \"\";\n\n\tlet t;\n\tlet div0_id_value;\n\tlet div0_class_value;\n\tlet div1;\n\tlet each_blocks = [];\n\tlet each_1_lookup = new Map_1();\n\tlet div1_role_value;\n\tlet div1_aria_labelledby_value;\n\tlet div1_id_value;\n\tlet each_value_2 = /*emojiWithCategory*/ ctx[67].emojis;\n\tconst get_key = ctx => /*emoji*/ ctx[64].id;\n\n\tfor (let i = 0; i < each_value_2.length; i += 1) {\n\t\tlet child_ctx = get_each_context_2(ctx, each_value_2, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach_1_lookup.set(key, each_blocks[i] = create_each_block_2(key, child_ctx));\n\t}\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt = text(t_value);\n\t\t\tdiv1 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tattr(div0, \"id\", div0_id_value = \"menu-label-\" + /*i*/ ctx[66]);\n\n\t\t\tattr(div0, \"class\", div0_class_value = \"category \" + (/*currentEmojisWithCategories*/ ctx[15].length === 1 && /*currentEmojisWithCategories*/ ctx[15][0].category === ''\n\t\t\t? 'gone'\n\t\t\t: ''));\n\n\t\t\tattr(div0, \"aria-hidden\", \"true\");\n\t\t\tattr(div1, \"class\", \"emoji-menu\");\n\t\t\tattr(div1, \"role\", div1_role_value = /*searchMode*/ ctx[4] ? 'listbox' : 'menu');\n\t\t\tattr(div1, \"aria-labelledby\", div1_aria_labelledby_value = \"menu-label-\" + /*i*/ ctx[66]);\n\t\t\tattr(div1, \"id\", div1_id_value = /*searchMode*/ ctx[4] ? 'search-results' : '');\n\t\t\tthis.first = div0;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div0, anchor);\n\t\t\tappend(div0, t);\n\t\t\tinsert(target, div1, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div1, null);\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (dirty[0] & /*searchMode, i18n, currentEmojisWithCategories, currentGroup*/ 40977 && t_value !== (t_value = (/*searchMode*/ ctx[4]\n\t\t\t? /*i18n*/ ctx[0].searchResultsLabel\n\t\t\t: /*emojiWithCategory*/ ctx[67].category\n\t\t\t\t? /*emojiWithCategory*/ ctx[67].category\n\t\t\t\t: /*currentEmojisWithCategories*/ ctx[15].length > 1\n\t\t\t\t\t? /*i18n*/ ctx[0].categories.custom\n\t\t\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name]) + \"\")) set_data(t, t_value);\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && div0_id_value !== (div0_id_value = \"menu-label-\" + /*i*/ ctx[66])) {\n\t\t\t\tattr(div0, \"id\", div0_id_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && div0_class_value !== (div0_class_value = \"category \" + (/*currentEmojisWithCategories*/ ctx[15].length === 1 && /*currentEmojisWithCategories*/ ctx[15][0].category === ''\n\t\t\t? 'gone'\n\t\t\t: ''))) {\n\t\t\t\tattr(div0, \"class\", div0_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem, labelWithSkin, currentSkinTone, unicodeWithSkin*/ 402686256) {\n\t\t\t\teach_value_2 = /*emojiWithCategory*/ ctx[67].emojis;\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value_2, each_1_lookup, div1, destroy_block, create_each_block_2, null, get_each_context_2);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && div1_role_value !== (div1_role_value = /*searchMode*/ ctx[4] ? 'listbox' : 'menu')) {\n\t\t\t\tattr(div1, \"role\", div1_role_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentEmojisWithCategories*/ 32768 && div1_aria_labelledby_value !== (div1_aria_labelledby_value = \"menu-label-\" + /*i*/ ctx[66])) {\n\t\t\t\tattr(div1, \"aria-labelledby\", div1_aria_labelledby_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && div1_id_value !== (div1_id_value = /*searchMode*/ ctx[4] ? 'search-results' : '')) {\n\t\t\t\tattr(div1, \"id\", div1_id_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div0);\n\t\t\tif (detaching) detach(div1);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d();\n\t\t\t}\n\t\t}\n\t};\n}\n\n// (103:94) {:else}\nfunction create_else_block(ctx) {\n\tlet img;\n\tlet img_src_value;\n\n\treturn {\n\t\tc() {\n\t\t\timg = element(\"img\");\n\t\t\tattr(img, \"class\", \"custom-emoji\");\n\t\t\tif (!src_url_equal(img.src, img_src_value = /*emoji*/ ctx[64].url)) attr(img, \"src\", img_src_value);\n\t\t\tattr(img, \"alt\", \"\");\n\t\t\tattr(img, \"loading\", \"lazy\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, img, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentFavorites*/ 1024 && !src_url_equal(img.src, img_src_value = /*emoji*/ ctx[64].url)) {\n\t\t\t\tattr(img, \"src\", img_src_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(img);\n\t\t}\n\t};\n}\n\n// (103:34) {#if emoji.unicode}\nfunction create_if_block(ctx) {\n\tlet t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]) + \"\";\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(t_value);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*currentFavorites, currentSkinTone*/ 1280 && t_value !== (t_value = /*unicodeWithSkin*/ ctx[27](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]) + \"\")) set_data(t, t_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t);\n\t\t}\n\t};\n}\n\n// (99:102) {#each currentFavorites as emoji, i (emoji.id)}\nfunction create_each_block(key_1, ctx) {\n\tlet button;\n\tlet button_aria_label_value;\n\tlet button_title_value;\n\tlet button_id_value;\n\n\tfunction select_block_type_1(ctx, dirty) {\n\t\tif (/*emoji*/ ctx[64].unicode) return create_if_block;\n\t\treturn create_else_block;\n\t}\n\n\tlet current_block_type = select_block_type_1(ctx);\n\tlet if_block = current_block_type(ctx);\n\n\treturn {\n\t\tkey: key_1,\n\t\tfirst: null,\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tif_block.c();\n\t\t\tattr(button, \"role\", \"menuitem\");\n\t\t\tattr(button, \"aria-label\", button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]));\n\t\t\tattr(button, \"title\", button_title_value = /*emoji*/ ctx[64].title);\n\t\t\tattr(button, \"class\", \"emoji\");\n\t\t\tattr(button, \"id\", button_id_value = \"fav-\" + /*emoji*/ ctx[64].id);\n\t\t\tthis.first = button;\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\t\t\tif_block.m(button, null);\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block) {\n\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = current_block_type(ctx);\n\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(button, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentFavorites, currentSkinTone*/ 1280 && button_aria_label_value !== (button_aria_label_value = /*labelWithSkin*/ ctx[28](/*emoji*/ ctx[64], /*currentSkinTone*/ ctx[8]))) {\n\t\t\t\tattr(button, \"aria-label\", button_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentFavorites*/ 1024 && button_title_value !== (button_title_value = /*emoji*/ ctx[64].title)) {\n\t\t\t\tattr(button, \"title\", button_title_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*currentFavorites*/ 1024 && button_id_value !== (button_id_value = \"fav-\" + /*emoji*/ ctx[64].id)) {\n\t\t\t\tattr(button, \"id\", button_id_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tif_block.d();\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet section;\n\tlet div0;\n\tlet div4;\n\tlet div1;\n\tlet input;\n\tlet input_placeholder_value;\n\tlet input_aria_expanded_value;\n\tlet input_aria_activedescendant_value;\n\tlet label;\n\tlet t0_value = /*i18n*/ ctx[0].searchLabel + \"\";\n\tlet t0;\n\tlet span0;\n\tlet t1_value = /*i18n*/ ctx[0].searchDescription + \"\";\n\tlet t1;\n\tlet div2;\n\tlet button0;\n\tlet t2;\n\tlet button0_class_value;\n\tlet div2_class_value;\n\tlet span1;\n\tlet t3_value = /*i18n*/ ctx[0].skinToneDescription + \"\";\n\tlet t3;\n\tlet div3;\n\tlet each_blocks_3 = [];\n\tlet each0_lookup = new Map_1();\n\tlet div3_class_value;\n\tlet div3_aria_label_value;\n\tlet div3_aria_activedescendant_value;\n\tlet div3_aria_hidden_value;\n\tlet div5;\n\tlet each_blocks_2 = [];\n\tlet each1_lookup = new Map_1();\n\tlet div5_aria_label_value;\n\tlet div7;\n\tlet div6;\n\tlet div8;\n\tlet t4;\n\tlet div8_class_value;\n\tlet div10;\n\tlet div9;\n\tlet each_blocks_1 = [];\n\tlet each2_lookup = new Map_1();\n\tlet div10_class_value;\n\tlet div10_role_value;\n\tlet div10_aria_label_value;\n\tlet div10_id_value;\n\tlet div11;\n\tlet each_blocks = [];\n\tlet each3_lookup = new Map_1();\n\tlet div11_class_value;\n\tlet div11_aria_label_value;\n\tlet button1;\n\tlet section_aria_label_value;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value_4 = /*skinTones*/ ctx[9];\n\tconst get_key = ctx => /*skinTone*/ ctx[73];\n\n\tfor (let i = 0; i < each_value_4.length; i += 1) {\n\t\tlet child_ctx = get_each_context_4(ctx, each_value_4, i);\n\t\tlet key = get_key(child_ctx);\n\t\teach0_lookup.set(key, each_blocks_3[i] = create_each_block_4(key, child_ctx));\n\t}\n\n\tlet each_value_3 = /*groups*/ ctx[12];\n\tconst get_key_1 = ctx => /*group*/ ctx[70].id;\n\n\tfor (let i = 0; i < each_value_3.length; i += 1) {\n\t\tlet child_ctx = get_each_context_3(ctx, each_value_3, i);\n\t\tlet key = get_key_1(child_ctx);\n\t\teach1_lookup.set(key, each_blocks_2[i] = create_each_block_3(key, child_ctx));\n\t}\n\n\tlet each_value_1 = /*currentEmojisWithCategories*/ ctx[15];\n\tconst get_key_2 = ctx => /*emojiWithCategory*/ ctx[67].category;\n\n\tfor (let i = 0; i < each_value_1.length; i += 1) {\n\t\tlet child_ctx = get_each_context_1(ctx, each_value_1, i);\n\t\tlet key = get_key_2(child_ctx);\n\t\teach2_lookup.set(key, each_blocks_1[i] = create_each_block_1(key, child_ctx));\n\t}\n\n\tlet each_value = /*currentFavorites*/ ctx[10];\n\tconst get_key_3 = ctx => /*emoji*/ ctx[64].id;\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\tlet child_ctx = get_each_context(ctx, each_value, i);\n\t\tlet key = get_key_3(child_ctx);\n\t\teach3_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tsection = element(\"section\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tdiv4 = element(\"div\");\n\t\t\tdiv1 = element(\"div\");\n\t\t\tinput = element(\"input\");\n\t\t\tlabel = element(\"label\");\n\t\t\tt0 = text(t0_value);\n\t\t\tspan0 = element(\"span\");\n\t\t\tt1 = text(t1_value);\n\t\t\tdiv2 = element(\"div\");\n\t\t\tbutton0 = element(\"button\");\n\t\t\tt2 = text(/*skinToneButtonText*/ ctx[21]);\n\t\t\tspan1 = element(\"span\");\n\t\t\tt3 = text(t3_value);\n\t\t\tdiv3 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks_3.length; i += 1) {\n\t\t\t\teach_blocks_3[i].c();\n\t\t\t}\n\n\t\t\tdiv5 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].c();\n\t\t\t}\n\n\t\t\tdiv7 = element(\"div\");\n\t\t\tdiv6 = element(\"div\");\n\t\t\tdiv8 = element(\"div\");\n\t\t\tt4 = text(/*message*/ ctx[18]);\n\t\t\tdiv10 = element(\"div\");\n\t\t\tdiv9 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].c();\n\t\t\t}\n\n\t\t\tdiv11 = element(\"div\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tbutton1 = element(\"button\");\n\t\t\tbutton1.textContent = \"😀\";\n\t\t\tattr(div0, \"class\", \"pad-top\");\n\t\t\tattr(input, \"id\", \"search\");\n\t\t\tattr(input, \"class\", \"search\");\n\t\t\tattr(input, \"type\", \"search\");\n\t\t\tattr(input, \"role\", \"combobox\");\n\t\t\tattr(input, \"enterkeyhint\", \"search\");\n\t\t\tattr(input, \"placeholder\", input_placeholder_value = /*i18n*/ ctx[0].searchLabel);\n\t\t\tattr(input, \"autocapitalize\", \"none\");\n\t\t\tattr(input, \"autocomplete\", \"off\");\n\t\t\tattr(input, \"spellcheck\", \"true\");\n\t\t\tattr(input, \"aria-expanded\", input_aria_expanded_value = !!(/*searchMode*/ ctx[4] && /*currentEmojis*/ ctx[1].length));\n\t\t\tattr(input, \"aria-controls\", \"search-results\");\n\t\t\tattr(input, \"aria-describedby\", \"search-description\");\n\t\t\tattr(input, \"aria-autocomplete\", \"list\");\n\n\t\t\tattr(input, \"aria-activedescendant\", input_aria_activedescendant_value = /*activeSearchItemId*/ ctx[26]\n\t\t\t? `emo-${/*activeSearchItemId*/ ctx[26]}`\n\t\t\t: '');\n\n\t\t\tattr(label, \"class\", \"sr-only\");\n\t\t\tattr(label, \"for\", \"search\");\n\t\t\tattr(span0, \"id\", \"search-description\");\n\t\t\tattr(span0, \"class\", \"sr-only\");\n\t\t\tattr(div1, \"class\", \"search-wrapper\");\n\t\t\tattr(button0, \"id\", \"skintone-button\");\n\t\t\tattr(button0, \"class\", button0_class_value = \"emoji \" + (/*skinTonePickerExpanded*/ ctx[6] ? 'hide-focus' : ''));\n\t\t\tattr(button0, \"aria-label\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\tattr(button0, \"title\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\tattr(button0, \"aria-describedby\", \"skintone-description\");\n\t\t\tattr(button0, \"aria-haspopup\", \"listbox\");\n\t\t\tattr(button0, \"aria-expanded\", /*skinTonePickerExpanded*/ ctx[6]);\n\t\t\tattr(button0, \"aria-controls\", \"skintone-list\");\n\n\t\t\tattr(div2, \"class\", div2_class_value = \"skintone-button-wrapper \" + (/*skinTonePickerExpandedAfterAnimation*/ ctx[19]\n\t\t\t? 'expanded'\n\t\t\t: ''));\n\n\t\t\tattr(span1, \"id\", \"skintone-description\");\n\t\t\tattr(span1, \"class\", \"sr-only\");\n\t\t\tattr(div3, \"id\", \"skintone-list\");\n\n\t\t\tattr(div3, \"class\", div3_class_value = \"skintone-list \" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t? ''\n\t\t\t: 'hidden no-animate'));\n\n\t\t\tset_style(div3, \"transform\", \"translateY(\" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t? 0\n\t\t\t: 'calc(-1 * var(--num-skintones) * var(--total-emoji-size))') + \")\");\n\n\t\t\tattr(div3, \"role\", \"listbox\");\n\t\t\tattr(div3, \"aria-label\", div3_aria_label_value = /*i18n*/ ctx[0].skinTonesLabel);\n\t\t\tattr(div3, \"aria-activedescendant\", div3_aria_activedescendant_value = \"skintone-\" + /*activeSkinTone*/ ctx[20]);\n\t\t\tattr(div3, \"aria-hidden\", div3_aria_hidden_value = !/*skinTonePickerExpanded*/ ctx[6]);\n\t\t\tattr(div4, \"class\", \"search-row\");\n\t\t\tattr(div5, \"class\", \"nav\");\n\t\t\tattr(div5, \"role\", \"tablist\");\n\t\t\tset_style(div5, \"grid-template-columns\", \"repeat(\" + /*groups*/ ctx[12].length + \", 1fr)\");\n\t\t\tattr(div5, \"aria-label\", div5_aria_label_value = /*i18n*/ ctx[0].categoriesLabel);\n\t\t\tattr(div6, \"class\", \"indicator\");\n\t\t\tset_style(div6, \"transform\", \"translateX(\" + (/*isRtl*/ ctx[24] ? -1 : 1) * /*currentGroupIndex*/ ctx[11] * 100 + \"%)\");\n\t\t\tattr(div7, \"class\", \"indicator-wrapper\");\n\t\t\tattr(div8, \"class\", div8_class_value = \"message \" + (/*message*/ ctx[18] ? '' : 'gone'));\n\t\t\tattr(div8, \"role\", \"alert\");\n\t\t\tattr(div8, \"aria-live\", \"polite\");\n\n\t\t\tattr(div10, \"class\", div10_class_value = \"tabpanel \" + (!/*databaseLoaded*/ ctx[14] || /*message*/ ctx[18]\n\t\t\t? 'gone'\n\t\t\t: ''));\n\n\t\t\tattr(div10, \"role\", div10_role_value = /*searchMode*/ ctx[4] ? 'region' : 'tabpanel');\n\n\t\t\tattr(div10, \"aria-label\", div10_aria_label_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i18n*/ ctx[0].searchResultsLabel\n\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name]);\n\n\t\t\tattr(div10, \"id\", div10_id_value = /*searchMode*/ ctx[4]\n\t\t\t? ''\n\t\t\t: `tab-${/*currentGroup*/ ctx[13].id}`);\n\n\t\t\tattr(div10, \"tabindex\", \"0\");\n\t\t\tattr(div11, \"class\", div11_class_value = \"favorites emoji-menu \" + (/*message*/ ctx[18] ? 'gone' : ''));\n\t\t\tattr(div11, \"role\", \"menu\");\n\t\t\tattr(div11, \"aria-label\", div11_aria_label_value = /*i18n*/ ctx[0].favoritesLabel);\n\t\t\tset_style(div11, \"padding-inline-end\", /*scrollbarWidth*/ ctx[25] + \"px\");\n\t\t\tattr(button1, \"aria-hidden\", \"true\");\n\t\t\tattr(button1, \"tabindex\", \"-1\");\n\t\t\tattr(button1, \"class\", \"abs-pos hidden emoji\");\n\t\t\tattr(section, \"class\", \"picker\");\n\t\t\tattr(section, \"aria-label\", section_aria_label_value = /*i18n*/ ctx[0].regionLabel);\n\t\t\tattr(section, \"style\", /*pickerStyle*/ ctx[22]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, section, anchor);\n\t\t\tappend(section, div0);\n\t\t\tappend(section, div4);\n\t\t\tappend(div4, div1);\n\t\t\tappend(div1, input);\n\t\t\tset_input_value(input, /*rawSearchText*/ ctx[2]);\n\t\t\tappend(div1, label);\n\t\t\tappend(label, t0);\n\t\t\tappend(div1, span0);\n\t\t\tappend(span0, t1);\n\t\t\tappend(div4, div2);\n\t\t\tappend(div2, button0);\n\t\t\tappend(button0, t2);\n\t\t\tappend(div4, span1);\n\t\t\tappend(span1, t3);\n\t\t\tappend(div4, div3);\n\n\t\t\tfor (let i = 0; i < each_blocks_3.length; i += 1) {\n\t\t\t\teach_blocks_3[i].m(div3, null);\n\t\t\t}\n\n\t\t\t/*div3_binding*/ ctx[49](div3);\n\t\t\tappend(section, div5);\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].m(div5, null);\n\t\t\t}\n\n\t\t\tappend(section, div7);\n\t\t\tappend(div7, div6);\n\t\t\tappend(section, div8);\n\t\t\tappend(div8, t4);\n\t\t\tappend(section, div10);\n\t\t\tappend(div10, div9);\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].m(div9, null);\n\t\t\t}\n\n\t\t\t/*div10_binding*/ ctx[51](div10);\n\t\t\tappend(section, div11);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].m(div11, null);\n\t\t\t}\n\n\t\t\tappend(section, button1);\n\t\t\t/*button1_binding*/ ctx[52](button1);\n\t\t\t/*section_binding*/ ctx[53](section);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"input\", /*input_input_handler*/ ctx[48]),\n\t\t\t\t\tlisten(input, \"keydown\", /*onSearchKeydown*/ ctx[30]),\n\t\t\t\t\tlisten(button0, \"click\", /*onClickSkinToneButton*/ ctx[35]),\n\t\t\t\t\tlisten(div3, \"focusout\", /*onSkinToneOptionsFocusOut*/ ctx[38]),\n\t\t\t\t\tlisten(div3, \"click\", /*onSkinToneOptionsClick*/ ctx[34]),\n\t\t\t\t\tlisten(div3, \"keydown\", /*onSkinToneOptionsKeydown*/ ctx[36]),\n\t\t\t\t\tlisten(div3, \"keyup\", /*onSkinToneOptionsKeyup*/ ctx[37]),\n\t\t\t\t\tlisten(div5, \"keydown\", /*onNavKeydown*/ ctx[32]),\n\t\t\t\t\taction_destroyer(/*calculateEmojiGridStyle*/ ctx[29].call(null, div9)),\n\t\t\t\t\tlisten(div10, \"click\", /*onEmojiClick*/ ctx[33]),\n\t\t\t\t\tlisten(div11, \"click\", /*onEmojiClick*/ ctx[33])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*i18n*/ 1 && input_placeholder_value !== (input_placeholder_value = /*i18n*/ ctx[0].searchLabel)) {\n\t\t\t\tattr(input, \"placeholder\", input_placeholder_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojis*/ 18 && input_aria_expanded_value !== (input_aria_expanded_value = !!(/*searchMode*/ ctx[4] && /*currentEmojis*/ ctx[1].length))) {\n\t\t\t\tattr(input, \"aria-expanded\", input_aria_expanded_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*activeSearchItemId*/ 67108864 && input_aria_activedescendant_value !== (input_aria_activedescendant_value = /*activeSearchItemId*/ ctx[26]\n\t\t\t? `emo-${/*activeSearchItemId*/ ctx[26]}`\n\t\t\t: '')) {\n\t\t\t\tattr(input, \"aria-activedescendant\", input_aria_activedescendant_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*rawSearchText*/ 4) {\n\t\t\t\tset_input_value(input, /*rawSearchText*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && t0_value !== (t0_value = /*i18n*/ ctx[0].searchLabel + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty[0] & /*i18n*/ 1 && t1_value !== (t1_value = /*i18n*/ ctx[0].searchDescription + \"\")) set_data(t1, t1_value);\n\t\t\tif (dirty[0] & /*skinToneButtonText*/ 2097152) set_data(t2, /*skinToneButtonText*/ ctx[21]);\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64 && button0_class_value !== (button0_class_value = \"emoji \" + (/*skinTonePickerExpanded*/ ctx[6] ? 'hide-focus' : ''))) {\n\t\t\t\tattr(button0, \"class\", button0_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinToneButtonLabel*/ 8388608) {\n\t\t\t\tattr(button0, \"aria-label\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinToneButtonLabel*/ 8388608) {\n\t\t\t\tattr(button0, \"title\", /*skinToneButtonLabel*/ ctx[23]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64) {\n\t\t\t\tattr(button0, \"aria-expanded\", /*skinTonePickerExpanded*/ ctx[6]);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpandedAfterAnimation*/ 524288 && div2_class_value !== (div2_class_value = \"skintone-button-wrapper \" + (/*skinTonePickerExpandedAfterAnimation*/ ctx[19]\n\t\t\t? 'expanded'\n\t\t\t: ''))) {\n\t\t\t\tattr(div2, \"class\", div2_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && t3_value !== (t3_value = /*i18n*/ ctx[0].skinToneDescription + \"\")) set_data(t3, t3_value);\n\n\t\t\tif (dirty[0] & /*skinTones, activeSkinTone, i18n*/ 1049089) {\n\t\t\t\teach_value_4 = /*skinTones*/ ctx[9];\n\t\t\t\teach_blocks_3 = update_keyed_each(each_blocks_3, dirty, get_key, 1, ctx, each_value_4, each0_lookup, div3, destroy_block, create_each_block_4, null, get_each_context_4);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64 && div3_class_value !== (div3_class_value = \"skintone-list \" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t? ''\n\t\t\t: 'hidden no-animate'))) {\n\t\t\t\tattr(div3, \"class\", div3_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64) {\n\t\t\t\tset_style(div3, \"transform\", \"translateY(\" + (/*skinTonePickerExpanded*/ ctx[6]\n\t\t\t\t? 0\n\t\t\t\t: 'calc(-1 * var(--num-skintones) * var(--total-emoji-size))') + \")\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && div3_aria_label_value !== (div3_aria_label_value = /*i18n*/ ctx[0].skinTonesLabel)) {\n\t\t\t\tattr(div3, \"aria-label\", div3_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*activeSkinTone*/ 1048576 && div3_aria_activedescendant_value !== (div3_aria_activedescendant_value = \"skintone-\" + /*activeSkinTone*/ ctx[20])) {\n\t\t\t\tattr(div3, \"aria-activedescendant\", div3_aria_activedescendant_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*skinTonePickerExpanded*/ 64 && div3_aria_hidden_value !== (div3_aria_hidden_value = !/*skinTonePickerExpanded*/ ctx[6])) {\n\t\t\t\tattr(div3, \"aria-hidden\", div3_aria_hidden_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*groups, i18n, searchMode, currentGroup*/ 12305 | dirty[1] & /*onNavClick*/ 1) {\n\t\t\t\teach_value_3 = /*groups*/ ctx[12];\n\t\t\t\teach_blocks_2 = update_keyed_each(each_blocks_2, dirty, get_key_1, 1, ctx, each_value_3, each1_lookup, div5, destroy_block, create_each_block_3, null, get_each_context_3);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*groups*/ 4096) {\n\t\t\t\tset_style(div5, \"grid-template-columns\", \"repeat(\" + /*groups*/ ctx[12].length + \", 1fr)\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && div5_aria_label_value !== (div5_aria_label_value = /*i18n*/ ctx[0].categoriesLabel)) {\n\t\t\t\tattr(div5, \"aria-label\", div5_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*isRtl, currentGroupIndex*/ 16779264) {\n\t\t\t\tset_style(div6, \"transform\", \"translateX(\" + (/*isRtl*/ ctx[24] ? -1 : 1) * /*currentGroupIndex*/ ctx[11] * 100 + \"%)\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*message*/ 262144) set_data(t4, /*message*/ ctx[18]);\n\n\t\t\tif (dirty[0] & /*message*/ 262144 && div8_class_value !== (div8_class_value = \"message \" + (/*message*/ ctx[18] ? '' : 'gone'))) {\n\t\t\t\tattr(div8, \"class\", div8_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentEmojisWithCategories, activeSearchItem, labelWithSkin, currentSkinTone, unicodeWithSkin, i18n, currentGroup*/ 402694449) {\n\t\t\t\teach_value_1 = /*currentEmojisWithCategories*/ ctx[15];\n\t\t\t\teach_blocks_1 = update_keyed_each(each_blocks_1, dirty, get_key_2, 1, ctx, each_value_1, each2_lookup, div9, destroy_block, create_each_block_1, null, get_each_context_1);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*databaseLoaded, message*/ 278528 && div10_class_value !== (div10_class_value = \"tabpanel \" + (!/*databaseLoaded*/ ctx[14] || /*message*/ ctx[18]\n\t\t\t? 'gone'\n\t\t\t: ''))) {\n\t\t\t\tattr(div10, \"class\", div10_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode*/ 16 && div10_role_value !== (div10_role_value = /*searchMode*/ ctx[4] ? 'region' : 'tabpanel')) {\n\t\t\t\tattr(div10, \"role\", div10_role_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, i18n, currentGroup*/ 8209 && div10_aria_label_value !== (div10_aria_label_value = /*searchMode*/ ctx[4]\n\t\t\t? /*i18n*/ ctx[0].searchResultsLabel\n\t\t\t: /*i18n*/ ctx[0].categories[/*currentGroup*/ ctx[13].name])) {\n\t\t\t\tattr(div10, \"aria-label\", div10_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*searchMode, currentGroup*/ 8208 && div10_id_value !== (div10_id_value = /*searchMode*/ ctx[4]\n\t\t\t? ''\n\t\t\t: `tab-${/*currentGroup*/ ctx[13].id}`)) {\n\t\t\t\tattr(div10, \"id\", div10_id_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*labelWithSkin, currentFavorites, currentSkinTone, unicodeWithSkin*/ 402654464) {\n\t\t\t\teach_value = /*currentFavorites*/ ctx[10];\n\t\t\t\teach_blocks = update_keyed_each(each_blocks, dirty, get_key_3, 1, ctx, each_value, each3_lookup, div11, destroy_block, create_each_block, null, get_each_context);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*message*/ 262144 && div11_class_value !== (div11_class_value = \"favorites emoji-menu \" + (/*message*/ ctx[18] ? 'gone' : ''))) {\n\t\t\t\tattr(div11, \"class\", div11_class_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && div11_aria_label_value !== (div11_aria_label_value = /*i18n*/ ctx[0].favoritesLabel)) {\n\t\t\t\tattr(div11, \"aria-label\", div11_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*scrollbarWidth*/ 33554432) {\n\t\t\t\tset_style(div11, \"padding-inline-end\", /*scrollbarWidth*/ ctx[25] + \"px\");\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*i18n*/ 1 && section_aria_label_value !== (section_aria_label_value = /*i18n*/ ctx[0].regionLabel)) {\n\t\t\t\tattr(section, \"aria-label\", section_aria_label_value);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*pickerStyle*/ 4194304) {\n\t\t\t\tattr(section, \"style\", /*pickerStyle*/ ctx[22]);\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(section);\n\n\t\t\tfor (let i = 0; i < each_blocks_3.length; i += 1) {\n\t\t\t\teach_blocks_3[i].d();\n\t\t\t}\n\n\t\t\t/*div3_binding*/ ctx[49](null);\n\n\t\t\tfor (let i = 0; i < each_blocks_2.length; i += 1) {\n\t\t\t\teach_blocks_2[i].d();\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].d();\n\t\t\t}\n\n\t\t\t/*div10_binding*/ ctx[51](null);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].d();\n\t\t\t}\n\n\t\t\t/*button1_binding*/ ctx[52](null);\n\t\t\t/*section_binding*/ ctx[53](null);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { skinToneEmoji } = $$props;\n\tlet { i18n } = $$props;\n\tlet { database } = $$props;\n\tlet { customEmoji } = $$props;\n\tlet { customCategorySorting } = $$props;\n\tlet { emojiVersion } = $$props;\n\n\t// private\n\tlet initialLoad = true;\n\n\tlet currentEmojis = [];\n\tlet currentEmojisWithCategories = []; // eslint-disable-line no-unused-vars\n\tlet rawSearchText = '';\n\tlet searchText = '';\n\tlet rootElement;\n\tlet baselineEmoji;\n\tlet tabpanelElement;\n\tlet searchMode = false; // eslint-disable-line no-unused-vars\n\tlet activeSearchItem = -1;\n\tlet message; // eslint-disable-line no-unused-vars\n\tlet skinTonePickerExpanded = false;\n\tlet skinTonePickerExpandedAfterAnimation = false; // eslint-disable-line no-unused-vars\n\tlet skinToneDropdown;\n\tlet currentSkinTone = 0;\n\tlet activeSkinTone = 0;\n\tlet skinToneButtonText; // eslint-disable-line no-unused-vars\n\tlet pickerStyle; // eslint-disable-line no-unused-vars\n\tlet skinToneButtonLabel = ''; // eslint-disable-line no-unused-vars\n\tlet skinTones = [];\n\tlet currentFavorites = []; // eslint-disable-line no-unused-vars\n\tlet defaultFavoriteEmojis;\n\tlet numColumns = DEFAULT_NUM_COLUMNS;\n\tlet isRtl = false; // eslint-disable-line no-unused-vars\n\tlet scrollbarWidth = 0; // eslint-disable-line no-unused-vars\n\tlet currentGroupIndex = 0;\n\tlet groups$1 = groups;\n\tlet currentGroup;\n\tlet databaseLoaded = false; // eslint-disable-line no-unused-vars\n\tlet activeSearchItemId; // eslint-disable-line no-unused-vars\n\n\t//\n\t// Utils/helpers\n\t//\n\tconst focus = id => {\n\t\trootElement.getRootNode().getElementById(id).focus();\n\t};\n\n\t// fire a custom event that crosses the shadow boundary\n\tconst fireEvent = (name, detail) => {\n\t\trootElement.dispatchEvent(new CustomEvent(name, { detail, bubbles: true, composed: true }));\n\t};\n\n\t// eslint-disable-next-line no-unused-vars\n\tconst unicodeWithSkin = (emoji, currentSkinTone) => currentSkinTone && emoji.skins && emoji.skins[currentSkinTone] || emoji.unicode;\n\n\t// eslint-disable-next-line no-unused-vars\n\tconst labelWithSkin = (emoji, currentSkinTone) => uniq([\n\t\temoji.name || unicodeWithSkin(emoji, currentSkinTone),\n\t\t...emoji.shortcodes || []\n\t]).join(', ');\n\n\t// Detect a skintone option button\n\tconst isSkinToneOption = element => (/^skintone-/).test(element.id);\n\n\t//\n\t// Determine the emoji support level (in requestIdleCallback)\n\t//\n\tonMount(() => {\n\t\tif (!emojiVersion) {\n\t\t\tdetectEmojiSupportLevel().then(level => {\n\t\t\t\t// Can't actually test emoji support in Jest/JSDom, emoji never render in color in Cairo\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (!level) {\n\t\t\t\t\t$$invalidate(18, message = i18n.emojiUnsupportedMessage);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t//\n\t// Calculate the width of the emoji grid. This serves two purposes:\n\t// 1) Re-calculate the --num-columns var because it may have changed\n\t// 2) Re-calculate the scrollbar width because it may have changed\n\t//   (i.e. because the number of items changed)\n\t// 3) Re-calculate whether we're in RTL mode or not.\n\t//\n\t// The benefit of doing this in one place is to align with rAF/ResizeObserver\n\t// and do all the calculations in one go. RTL vs LTR is not strictly width-related,\n\t// but since we're already reading the style here, and since it's already aligned with\n\t// the rAF loop, this is the most appropriate place to do it perf-wise.\n\t//\n\t// eslint-disable-next-line no-unused-vars\n\tfunction calculateEmojiGridStyle(node) {\n\t\treturn calculateWidth(node, width => {\n\t\t\t/* istanbul ignore next */\n\t\t\tif (\"production\" !== 'test') {\n\t\t\t\t// jsdom throws errors for this kind of fancy stuff\n\t\t\t\t// read all the style/layout calculations we need to make\n\t\t\t\tconst style = getComputedStyle(rootElement);\n\n\t\t\t\tconst newNumColumns = parseInt(style.getPropertyValue('--num-columns'), 10);\n\t\t\t\tconst newIsRtl = style.getPropertyValue('direction') === 'rtl';\n\t\t\t\tconst parentWidth = node.parentElement.getBoundingClientRect().width;\n\t\t\t\tconst newScrollbarWidth = parentWidth - width;\n\n\t\t\t\t// write to Svelte variables\n\t\t\t\t$$invalidate(47, numColumns = newNumColumns);\n\n\t\t\t\t$$invalidate(25, scrollbarWidth = newScrollbarWidth); // eslint-disable-line no-unused-vars\n\t\t\t\t$$invalidate(24, isRtl = newIsRtl); // eslint-disable-line no-unused-vars\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction checkZwjSupportAndUpdate(zwjEmojisToCheck) {\n\t\tconst rootNode = rootElement.getRootNode();\n\t\tconst emojiToDomNode = emoji => rootNode.getElementById(`emo-${emoji.id}`);\n\t\tcheckZwjSupport(zwjEmojisToCheck, baselineEmoji, emojiToDomNode);\n\n\t\t// force update\n\t\t$$invalidate(1, currentEmojis = currentEmojis); // eslint-disable-line no-self-assign\n\t}\n\n\tfunction isZwjSupported(emoji) {\n\t\treturn !emoji.unicode || !hasZwj(emoji) || supportedZwjEmojis.get(emoji.unicode);\n\t}\n\n\tasync function filterEmojisByVersion(emojis) {\n\t\tconst emojiSupportLevel = emojiVersion || await detectEmojiSupportLevel();\n\n\t\t// !version corresponds to custom emoji\n\t\treturn emojis.filter(({ version }) => !version || version <= emojiSupportLevel);\n\t}\n\n\tasync function summarizeEmojis(emojis) {\n\t\treturn summarizeEmojisForUI(emojis, emojiVersion || await detectEmojiSupportLevel());\n\t}\n\n\tasync function getEmojisByGroup(group) {\n\n\t\t// -1 is custom emoji\n\t\tconst emoji = group === -1\n\t\t? customEmoji\n\t\t: await database.getEmojiByGroup(group);\n\n\t\treturn summarizeEmojis(await filterEmojisByVersion(emoji));\n\t}\n\n\tasync function getEmojisBySearchQuery(query) {\n\t\treturn summarizeEmojis(await filterEmojisByVersion(await database.getEmojiBySearchQuery(query)));\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onSearchKeydown(event) {\n\t\tif (!searchMode || !currentEmojis.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst goToNextOrPrevious = previous => {\n\t\t\thalt(event);\n\t\t\t$$invalidate(5, activeSearchItem = incrementOrDecrement(previous, activeSearchItem, currentEmojis));\n\t\t};\n\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowDown':\n\t\t\t\treturn goToNextOrPrevious(false);\n\t\t\tcase 'ArrowUp':\n\t\t\t\treturn goToNextOrPrevious(true);\n\t\t\tcase 'Enter':\n\t\t\t\tif (activeSearchItem !== -1) {\n\t\t\t\t\thalt(event);\n\t\t\t\t\treturn clickEmoji(currentEmojis[activeSearchItem].id);\n\t\t\t\t} else if (currentEmojis.length) {\n\t\t\t\t\t$$invalidate(5, activeSearchItem = 0);\n\t\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t// Handle user input on nav\n\t//\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onNavClick(group) {\n\t\t$$invalidate(2, rawSearchText = '');\n\t\t$$invalidate(45, searchText = '');\n\t\t$$invalidate(5, activeSearchItem = -1);\n\t\t$$invalidate(11, currentGroupIndex = groups$1.findIndex(_ => _.id === group.id));\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onNavKeydown(event) {\n\t\tconst { target, key } = event;\n\n\t\tconst doFocus = el => {\n\t\t\tif (el) {\n\t\t\t\thalt(event);\n\t\t\t\tel.focus();\n\t\t\t}\n\t\t};\n\n\t\tswitch (key) {\n\t\t\tcase 'ArrowLeft':\n\t\t\t\treturn doFocus(target.previousSibling);\n\t\t\tcase 'ArrowRight':\n\t\t\t\treturn doFocus(target.nextSibling);\n\t\t\tcase 'Home':\n\t\t\t\treturn doFocus(target.parentElement.firstChild);\n\t\t\tcase 'End':\n\t\t\t\treturn doFocus(target.parentElement.lastChild);\n\t\t}\n\t}\n\n\t//\n\t// Handle user input on an emoji\n\t//\n\tasync function clickEmoji(unicodeOrName) {\n\t\tconst emoji = await database.getEmojiByUnicodeOrName(unicodeOrName);\n\t\tconst emojiSummary = [...currentEmojis, ...currentFavorites].find(_ => _.id === unicodeOrName);\n\t\tconst skinTonedUnicode = emojiSummary.unicode && unicodeWithSkin(emojiSummary, currentSkinTone);\n\t\tawait database.incrementFavoriteEmojiCount(unicodeOrName);\n\n\t\tfireEvent('emoji-click', {\n\t\t\temoji,\n\t\t\tskinTone: currentSkinTone,\n\t\t\t...skinTonedUnicode && { unicode: skinTonedUnicode },\n\t\t\t...emojiSummary.name && { name: emojiSummary.name }\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tasync function onEmojiClick(event) {\n\t\tconst { target } = event;\n\n\t\tif (!target.classList.contains('emoji')) {\n\t\t\treturn;\n\t\t}\n\n\t\thalt(event);\n\t\tconst id = target.id.substring(4); // replace 'emo-' or 'fav-' prefix\n\n\t\t/* no await */\n\t\tclickEmoji(id);\n\t}\n\n\t//\n\t// Handle user input on the skintone picker\n\t//\n\t// eslint-disable-next-line no-unused-vars\n\tasync function onSkinToneOptionsClick(event) {\n\t\tconst { target } = event;\n\n\t\tif (!isSkinToneOption(target)) {\n\t\t\treturn;\n\t\t}\n\n\t\thalt(event);\n\t\tconst skinTone = parseInt(target.id.slice(9), 10); // remove 'skintone-' prefix\n\t\t$$invalidate(8, currentSkinTone = skinTone);\n\t\t$$invalidate(6, skinTonePickerExpanded = false);\n\t\tfocus('skintone-button');\n\t\tfireEvent('skin-tone-change', { skinTone });\n\n\t\t/* no await */\n\t\tdatabase.setPreferredSkinTone(skinTone);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tasync function onClickSkinToneButton(event) {\n\t\t$$invalidate(6, skinTonePickerExpanded = !skinTonePickerExpanded);\n\t\t$$invalidate(20, activeSkinTone = currentSkinTone);\n\n\t\tif (skinTonePickerExpanded) {\n\t\t\thalt(event);\n\t\t\trAF(() => focus(`skintone-${activeSkinTone}`));\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onSkinToneOptionsKeydown(event) {\n\t\tif (!skinTonePickerExpanded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst changeActiveSkinTone = async nextSkinTone => {\n\t\t\thalt(event);\n\t\t\t$$invalidate(20, activeSkinTone = nextSkinTone);\n\t\t\tawait tick();\n\t\t\tfocus(`skintone-${activeSkinTone}`);\n\t\t};\n\n\t\tswitch (event.key) {\n\t\t\tcase 'ArrowUp':\n\t\t\t\treturn changeActiveSkinTone(incrementOrDecrement(true, activeSkinTone, skinTones));\n\t\t\tcase 'ArrowDown':\n\t\t\t\treturn changeActiveSkinTone(incrementOrDecrement(false, activeSkinTone, skinTones));\n\t\t\tcase 'Home':\n\t\t\t\treturn changeActiveSkinTone(0);\n\t\t\tcase 'End':\n\t\t\t\treturn changeActiveSkinTone(skinTones.length - 1);\n\t\t\tcase 'Enter':\n\t\t\t\t// enter on keydown, space on keyup. this is just how browsers work for buttons\n\t\t\t\t// https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n\t\t\t\treturn onSkinToneOptionsClick(event);\n\t\t\tcase 'Escape':\n\t\t\t\thalt(event);\n\t\t\t\t$$invalidate(6, skinTonePickerExpanded = false);\n\t\t\t\treturn focus('skintone-button');\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction onSkinToneOptionsKeyup(event) {\n\t\tif (!skinTonePickerExpanded) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event.key) {\n\t\t\tcase ' ':\n\t\t\t\t// enter on keydown, space on keyup. this is just how browsers work for buttons\n\t\t\t\t// https://lists.w3.org/Archives/Public/w3c-wai-ig/2019JanMar/0086.html\n\t\t\t\treturn onSkinToneOptionsClick(event);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tasync function onSkinToneOptionsFocusOut(event) {\n\t\t// On blur outside of the skintone options, collapse the skintone picker.\n\t\t// Except if focus is just moving to another skintone option, e.g. pressing up/down to change focus\n\t\tconst { relatedTarget } = event;\n\n\t\tif (!relatedTarget || !isSkinToneOption(relatedTarget)) {\n\t\t\t$$invalidate(6, skinTonePickerExpanded = false);\n\t\t}\n\t}\n\n\tfunction input_input_handler() {\n\t\trawSearchText = this.value;\n\t\t$$invalidate(2, rawSearchText);\n\t}\n\n\tfunction div3_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tskinToneDropdown = $$value;\n\t\t\t$$invalidate(7, skinToneDropdown);\n\t\t});\n\t}\n\n\tconst click_handler = group => onNavClick(group);\n\n\tfunction div10_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\ttabpanelElement = $$value;\n\t\t\t$$invalidate(3, tabpanelElement);\n\t\t});\n\t}\n\n\tfunction button1_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\tbaselineEmoji = $$value;\n\t\t\t$$invalidate(17, baselineEmoji);\n\t\t});\n\t}\n\n\tfunction section_binding($$value) {\n\t\tbinding_callbacks[$$value ? 'unshift' : 'push'](() => {\n\t\t\trootElement = $$value;\n\t\t\t$$invalidate(16, rootElement);\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('skinToneEmoji' in $$props) $$invalidate(40, skinToneEmoji = $$props.skinToneEmoji);\n\t\tif ('i18n' in $$props) $$invalidate(0, i18n = $$props.i18n);\n\t\tif ('database' in $$props) $$invalidate(39, database = $$props.database);\n\t\tif ('customEmoji' in $$props) $$invalidate(41, customEmoji = $$props.customEmoji);\n\t\tif ('customCategorySorting' in $$props) $$invalidate(42, customCategorySorting = $$props.customCategorySorting);\n\t\tif ('emojiVersion' in $$props) $$invalidate(43, emojiVersion = $$props.emojiVersion);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty[1] & /*customEmoji, database*/ 1280) {\n\t\t\t/* eslint-enable no-unused-vars */\n\t\t\t//\n\t\t\t// Set or update the customEmoji\n\t\t\t//\n\t\t\t{\n\t\t\t\tif (customEmoji && database) {\n\t\t\t\t\t$$invalidate(39, database.customEmoji = customEmoji, database);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*i18n*/ 1 | $$self.$$.dirty[1] & /*database*/ 256) {\n\t\t\t//\n\t\t\t// Set or update the database object\n\t\t\t//\n\t\t\t{\n\t\t\t\t// show a Loading message if it takes a long time, or show an error if there's a network/IDB error\n\t\t\t\tasync function handleDatabaseLoading() {\n\t\t\t\t\tlet showingLoadingMessage = false;\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tshowingLoadingMessage = true;\n\t\t\t\t\t\t\t$$invalidate(18, message = i18n.loadingMessage);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTIMEOUT_BEFORE_LOADING_MESSAGE\n\t\t\t\t\t);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait database.ready();\n\t\t\t\t\t\t$$invalidate(14, databaseLoaded = true); // eslint-disable-line no-unused-vars\n\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t$$invalidate(18, message = i18n.networkErrorMessage);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tclearTimeout(timeoutHandle);\n\n\t\t\t\t\t\tif (showingLoadingMessage) {\n\t\t\t\t\t\t\t// Seems safer than checking the i18n string, which may change\n\t\t\t\t\t\t\tshowingLoadingMessage = false;\n\n\t\t\t\t\t\t\t$$invalidate(18, message = ''); // eslint-disable-line no-unused-vars\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (database) {\n\t\t\t\t\t/* no await */\n\t\t\t\t\thandleDatabaseLoading();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*groups, currentGroupIndex*/ 6144 | $$self.$$.dirty[1] & /*customEmoji*/ 1024) {\n\t\t\t{\n\t\t\t\tif (customEmoji && customEmoji.length) {\n\t\t\t\t\t$$invalidate(12, groups$1 = [customGroup, ...groups]);\n\t\t\t\t} else if (groups$1 !== groups) {\n\t\t\t\t\tif (currentGroupIndex) {\n\t\t\t\t\t\t// If the current group is anything other than \"custom\" (which is first), decrement.\n\t\t\t\t\t\t// This fixes the odd case where you set customEmoji, then pick a category, then unset customEmoji\n\t\t\t\t\t\t$$invalidate(11, currentGroupIndex--, currentGroupIndex);\n\t\t\t\t\t}\n\n\t\t\t\t\t$$invalidate(12, groups$1 = groups);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*rawSearchText*/ 4) {\n\t\t\t/* eslint-enable no-unused-vars */\n\t\t\t//\n\t\t\t// Handle user input on the search input\n\t\t\t//\n\t\t\t{\n\t\t\t\trIC(() => {\n\t\t\t\t\t$$invalidate(45, searchText = (rawSearchText || '').trim()); // defer to avoid input delays, plus we can trim here\n\t\t\t\t\t$$invalidate(5, activeSearchItem = -1);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*groups, currentGroupIndex*/ 6144) {\n\t\t\t//\n\t\t\t// Update the current group based on the currentGroupIndex\n\t\t\t//\n\t\t\t$$invalidate(13, currentGroup = groups$1[currentGroupIndex]);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded, currentGroup*/ 24576 | $$self.$$.dirty[1] & /*searchText*/ 16384) {\n\t\t\t//\n\t\t\t// Set or update the currentEmojis. Check for invalid ZWJ renderings\n\t\t\t// (i.e. double emoji).\n\t\t\t//\n\t\t\t{\n\t\t\t\tasync function updateEmojis() {\n\n\t\t\t\t\tif (!databaseLoaded) {\n\t\t\t\t\t\t$$invalidate(1, currentEmojis = []);\n\t\t\t\t\t\t$$invalidate(4, searchMode = false);\n\t\t\t\t\t} else if (searchText.length >= MIN_SEARCH_TEXT_LENGTH) {\n\t\t\t\t\t\tconst currentSearchText = searchText;\n\t\t\t\t\t\tconst newEmojis = await getEmojisBySearchQuery(currentSearchText);\n\n\t\t\t\t\t\tif (currentSearchText === searchText) {\n\t\t\t\t\t\t\t// if the situation changes asynchronously, do not update\n\t\t\t\t\t\t\t$$invalidate(1, currentEmojis = newEmojis);\n\n\t\t\t\t\t\t\t$$invalidate(4, searchMode = true);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (currentGroup) {\n\t\t\t\t\t\tconst currentGroupId = currentGroup.id;\n\t\t\t\t\t\tconst newEmojis = await getEmojisByGroup(currentGroupId);\n\n\t\t\t\t\t\tif (currentGroupId === currentGroup.id) {\n\t\t\t\t\t\t\t// if the situation changes asynchronously, do not update\n\t\t\t\t\t\t\t$$invalidate(1, currentEmojis = newEmojis);\n\n\t\t\t\t\t\t\t$$invalidate(4, searchMode = false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* no await */\n\t\t\t\tupdateEmojis();\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*groups, searchMode*/ 4112) {\n\t\t\t//\n\t\t\t// Global styles for the entire picker\n\t\t\t//\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t$$invalidate(22, pickerStyle = `\n  --num-groups: ${groups$1.length}; \n  --indicator-opacity: ${searchMode ? 0 : 1}; \n  --num-skintones: ${NUM_SKIN_TONES};`);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded*/ 16384 | $$self.$$.dirty[1] & /*database*/ 256) {\n\t\t\t//\n\t\t\t// Set or update the preferred skin tone\n\t\t\t//\n\t\t\t{\n\t\t\t\tasync function updatePreferredSkinTone() {\n\t\t\t\t\tif (databaseLoaded) {\n\t\t\t\t\t\t$$invalidate(8, currentSkinTone = await database.getPreferredSkinTone());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* no await */\n\t\t\t\tupdatePreferredSkinTone();\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[1] & /*skinToneEmoji*/ 512) {\n\t\t\t$$invalidate(9, skinTones = Array(NUM_SKIN_TONES).fill().map((_, i) => applySkinTone(skinToneEmoji, i)));\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*skinTones, currentSkinTone*/ 768) {\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t$$invalidate(21, skinToneButtonText = skinTones[currentSkinTone]);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*i18n, currentSkinTone*/ 257) {\n\t\t\t$$invalidate(23, skinToneButtonLabel = i18n.skinToneLabel.replace('{skinTone}', i18n.skinTones[currentSkinTone]));\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded*/ 16384 | $$self.$$.dirty[1] & /*database*/ 256) {\n\t\t\t/* eslint-enable no-unused-vars */\n\t\t\t//\n\t\t\t// Set or update the favorites emojis\n\t\t\t//\n\t\t\t{\n\t\t\t\tasync function updateDefaultFavoriteEmojis() {\n\t\t\t\t\t$$invalidate(46, defaultFavoriteEmojis = (await Promise.all(MOST_COMMONLY_USED_EMOJI.map(unicode => database.getEmojiByUnicodeOrName(unicode)))).filter(Boolean)); // filter because in Jest tests we don't have all the emoji in the DB\n\t\t\t\t}\n\n\t\t\t\tif (databaseLoaded) {\n\t\t\t\t\t/* no await */\n\t\t\t\t\tupdateDefaultFavoriteEmojis();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*databaseLoaded*/ 16384 | $$self.$$.dirty[1] & /*database, numColumns, defaultFavoriteEmojis*/ 98560) {\n\t\t\t{\n\t\t\t\tasync function updateFavorites() {\n\t\t\t\t\tconst dbFavorites = await database.getTopFavoriteEmoji(numColumns);\n\t\t\t\t\tconst favorites = await summarizeEmojis(uniqBy([...dbFavorites, ...defaultFavoriteEmojis], _ => _.unicode || _.name).slice(0, numColumns));\n\t\t\t\t\t$$invalidate(10, currentFavorites = favorites);\n\t\t\t\t}\n\n\t\t\t\tif (databaseLoaded && defaultFavoriteEmojis) {\n\t\t\t\t\t/* no await */\n\t\t\t\t\tupdateFavorites();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*currentEmojis, tabpanelElement*/ 10 | $$self.$$.dirty[1] & /*emojiVersion*/ 4096) {\n\t\t\t// Some emojis have their ligatures rendered as two or more consecutive emojis\n\t\t\t// We want to treat these the same as unsupported emojis, so we compare their\n\t\t\t// widths against the baseline widths and remove them as necessary\n\t\t\t{\n\t\t\t\tconst zwjEmojisToCheck = currentEmojis.filter(emoji => emoji.unicode).filter(emoji => hasZwj(emoji) && !supportedZwjEmojis.has(emoji.unicode)); // filter custom emoji\n\n\t\t\t\tif (!emojiVersion && zwjEmojisToCheck.length) {\n\t\t\t\t\t// render now, check their length later\n\t\t\t\t\trAF(() => checkZwjSupportAndUpdate(zwjEmojisToCheck));\n\t\t\t\t} else {\n\t\t\t\t\t$$invalidate(1, currentEmojis = emojiVersion\n\t\t\t\t\t? currentEmojis\n\t\t\t\t\t: currentEmojis.filter(isZwjSupported));\n\n\t\t\t\t\t// Reset scroll top to 0 when emojis change\n\t\t\t\t\trAF(() => resetScrollTopIfPossible(tabpanelElement));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*currentEmojis, currentFavorites*/ 1026 | $$self.$$.dirty[1] & /*initialLoad*/ 8192) {\n\t\t\t{\n\t\t\t\t// consider initialLoad to be complete when the first tabpanel and favorites are rendered\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (\"production\" !== 'production' || false) {\n\t\t\t\t\tif (currentEmojis.length && currentFavorites.length && initialLoad) {\n\t\t\t\t\t\t$$invalidate(44, initialLoad = false);\n\t\t\t\t\t\trequestPostAnimationFrame(() => (void 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*searchMode, currentEmojis*/ 18 | $$self.$$.dirty[1] & /*customCategorySorting*/ 2048) {\n\t\t\t//\n\t\t\t// Derive currentEmojisWithCategories from currentEmojis. This is always done even if there\n\t\t\t// are no categories, because it's just easier to code the HTML this way.\n\t\t\t//\n\t\t\t{\n\t\t\t\tfunction calculateCurrentEmojisWithCategories() {\n\t\t\t\t\tif (searchMode) {\n\t\t\t\t\t\treturn [{ category: '', emojis: currentEmojis }];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst categoriesToEmoji = new Map();\n\n\t\t\t\t\tfor (const emoji of currentEmojis) {\n\t\t\t\t\t\tconst category = emoji.category || '';\n\t\t\t\t\t\tlet emojis = categoriesToEmoji.get(category);\n\n\t\t\t\t\t\tif (!emojis) {\n\t\t\t\t\t\t\temojis = [];\n\t\t\t\t\t\t\tcategoriesToEmoji.set(category, emojis);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\temojis.push(emoji);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...categoriesToEmoji.entries()].map(([category, emojis]) => ({ category, emojis })).sort((a, b) => customCategorySorting(a.category, b.category));\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\t$$invalidate(15, currentEmojisWithCategories = calculateCurrentEmojisWithCategories());\n\t\t\t}\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*activeSearchItem, currentEmojis*/ 34) {\n\t\t\t//\n\t\t\t// Handle active search item (i.e. pressing up or down while searching)\n\t\t\t//\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t$$invalidate(26, activeSearchItemId = activeSearchItem !== -1 && currentEmojis[activeSearchItem].id);\n\t\t}\n\n\t\tif ($$self.$$.dirty[0] & /*skinTonePickerExpanded, skinToneDropdown*/ 192) {\n\t\t\t// To make the animation nicer, change the z-index of the skintone picker button\n\t\t\t// *after* the animation has played. This makes it appear that the picker box\n\t\t\t// is expanding \"below\" the button\n\t\t\t{\n\t\t\t\tif (skinTonePickerExpanded) {\n\t\t\t\t\tskinToneDropdown.addEventListener(\n\t\t\t\t\t\t'transitionend',\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t$$invalidate(19, skinTonePickerExpandedAfterAnimation = true); // eslint-disable-line no-unused-vars\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ once: true }\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t$$invalidate(19, skinTonePickerExpandedAfterAnimation = false); // eslint-disable-line no-unused-vars\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn [\n\t\ti18n,\n\t\tcurrentEmojis,\n\t\trawSearchText,\n\t\ttabpanelElement,\n\t\tsearchMode,\n\t\tactiveSearchItem,\n\t\tskinTonePickerExpanded,\n\t\tskinToneDropdown,\n\t\tcurrentSkinTone,\n\t\tskinTones,\n\t\tcurrentFavorites,\n\t\tcurrentGroupIndex,\n\t\tgroups$1,\n\t\tcurrentGroup,\n\t\tdatabaseLoaded,\n\t\tcurrentEmojisWithCategories,\n\t\trootElement,\n\t\tbaselineEmoji,\n\t\tmessage,\n\t\tskinTonePickerExpandedAfterAnimation,\n\t\tactiveSkinTone,\n\t\tskinToneButtonText,\n\t\tpickerStyle,\n\t\tskinToneButtonLabel,\n\t\tisRtl,\n\t\tscrollbarWidth,\n\t\tactiveSearchItemId,\n\t\tunicodeWithSkin,\n\t\tlabelWithSkin,\n\t\tcalculateEmojiGridStyle,\n\t\tonSearchKeydown,\n\t\tonNavClick,\n\t\tonNavKeydown,\n\t\tonEmojiClick,\n\t\tonSkinToneOptionsClick,\n\t\tonClickSkinToneButton,\n\t\tonSkinToneOptionsKeydown,\n\t\tonSkinToneOptionsKeyup,\n\t\tonSkinToneOptionsFocusOut,\n\t\tdatabase,\n\t\tskinToneEmoji,\n\t\tcustomEmoji,\n\t\tcustomCategorySorting,\n\t\temojiVersion,\n\t\tinitialLoad,\n\t\tsearchText,\n\t\tdefaultFavoriteEmojis,\n\t\tnumColumns,\n\t\tinput_input_handler,\n\t\tdiv3_binding,\n\t\tclick_handler,\n\t\tdiv10_binding,\n\t\tbutton1_binding,\n\t\tsection_binding\n\t];\n}\n\nclass Picker extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance,\n\t\t\tcreate_fragment,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tskinToneEmoji: 40,\n\t\t\t\ti18n: 0,\n\t\t\t\tdatabase: 39,\n\t\t\t\tcustomEmoji: 41,\n\t\t\t\tcustomCategorySorting: 42,\n\t\t\t\temojiVersion: 43\n\t\t\t},\n\t\t\tnull,\n\t\t\t[-1, -1, -1]\n\t\t);\n\t}\n}\n\nconst DEFAULT_DATA_SOURCE = 'https://cdn.jsdelivr.net/npm/emoji-picker-element-data@^1/en/emojibase/data.json';\nconst DEFAULT_LOCALE = 'en';\n\nvar enI18n = {\n  categoriesLabel: 'Categories',\n  emojiUnsupportedMessage: 'Your browser does not support color emoji.',\n  favoritesLabel: 'Favorites',\n  loadingMessage: 'Loading…',\n  networkErrorMessage: 'Could not load emoji.',\n  regionLabel: 'Emoji picker',\n  searchDescription: 'When search results are available, press up or down to select and enter to choose.',\n  searchLabel: 'Search',\n  searchResultsLabel: 'Search results',\n  skinToneDescription: 'When expanded, press up or down to select and enter to choose.',\n  skinToneLabel: 'Choose a skin tone (currently {skinTone})',\n  skinTonesLabel: 'Skin tones',\n  skinTones: [\n    'Default',\n    'Light',\n    'Medium-Light',\n    'Medium',\n    'Medium-Dark',\n    'Dark'\n  ],\n  categories: {\n    custom: 'Custom',\n    'smileys-emotion': 'Smileys and emoticons',\n    'people-body': 'People and body',\n    'animals-nature': 'Animals and nature',\n    'food-drink': 'Food and drink',\n    'travel-places': 'Travel and places',\n    activities: 'Activities',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags'\n  }\n};\n\nconst PROPS = [\n  'customEmoji',\n  'customCategorySorting',\n  'database',\n  'dataSource',\n  'i18n',\n  'locale',\n  'skinToneEmoji',\n  'emojiVersion'\n];\n\n// Styles injected ourselves, so we can declare the FONT_FAMILY variable in one place\nconst EXTRA_STYLES = `:host{--emoji-font-family:${FONT_FAMILY}}`;\n\nclass PickerElement extends HTMLElement {\n  constructor (props) {\n    super();\n    this.attachShadow({ mode: 'open' });\n    const style = document.createElement('style');\n    style.textContent = \":host{--emoji-size:1.375rem;--emoji-padding:0.5rem;--category-emoji-size:var(--emoji-size);--category-emoji-padding:var(--emoji-padding);--indicator-height:3px;--input-border-radius:0.5rem;--input-border-size:1px;--input-font-size:1rem;--input-line-height:1.5;--input-padding:0.25rem;--num-columns:8;--outline-size:2px;--border-size:1px;--skintone-border-radius:1rem;--category-font-size:1rem;display:flex;width:min-content;height:400px}:host,:host(.light){color-scheme:light;--background:#fff;--border-color:#e0e0e0;--indicator-color:#385ac1;--input-border-color:#999;--input-font-color:#111;--input-placeholder-color:#999;--outline-color:#999;--category-font-color:#111;--button-active-background:#e6e6e6;--button-hover-background:#d9d9d9}:host(.dark){color-scheme:dark;--background:#222;--border-color:#444;--indicator-color:#5373ec;--input-border-color:#ccc;--input-font-color:#efefef;--input-placeholder-color:#ccc;--outline-color:#fff;--category-font-color:#efefef;--button-active-background:#555555;--button-hover-background:#484848}@media (prefers-color-scheme:dark){:host{color-scheme:dark;--background:#222;--border-color:#444;--indicator-color:#5373ec;--input-border-color:#ccc;--input-font-color:#efefef;--input-placeholder-color:#ccc;--outline-color:#fff;--category-font-color:#efefef;--button-active-background:#555555;--button-hover-background:#484848}}:host([hidden]){display:none}button{margin:0;padding:0;border:0;background:0 0;box-shadow:none;-webkit-tap-highlight-color:transparent}button::-moz-focus-inner{border:0}input{padding:0;margin:0;line-height:1.15;font-family:inherit}input[type=search]{-webkit-appearance:none}:focus{outline:var(--outline-color) solid var(--outline-size);outline-offset:calc(-1*var(--outline-size))}:host([data-js-focus-visible]) :focus:not([data-focus-visible-added]){outline:0}:focus:not(:focus-visible){outline:0}.hide-focus{outline:0}*{box-sizing:border-box}.picker{contain:content;display:flex;flex-direction:column;background:var(--background);border:var(--border-size) solid var(--border-color);width:100%;height:100%;overflow:hidden;--total-emoji-size:calc(var(--emoji-size) + (2 * var(--emoji-padding)));--total-category-emoji-size:calc(var(--category-emoji-size) + (2 * var(--category-emoji-padding)))}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.hidden{opacity:0;pointer-events:none}.abs-pos{position:absolute;left:0;top:0}.gone{display:none!important}.skintone-button-wrapper,.skintone-list{background:var(--background);z-index:3}.skintone-button-wrapper.expanded{z-index:1}.skintone-list{position:absolute;inset-inline-end:0;top:0;z-index:2;overflow:visible;border-bottom:var(--border-size) solid var(--border-color);border-radius:0 0 var(--skintone-border-radius) var(--skintone-border-radius);will-change:transform;transition:transform .2s ease-in-out;transform-origin:center 0}@media (prefers-reduced-motion:reduce){.skintone-list{transition-duration:.001s}}@supports not (inset-inline-end:0){.skintone-list{right:0}}.skintone-list.no-animate{transition:none}.tabpanel{overflow-y:auto;-webkit-overflow-scrolling:touch;will-change:transform;min-height:0;flex:1;contain:content}.emoji-menu{display:grid;grid-template-columns:repeat(var(--num-columns),var(--total-emoji-size));justify-content:space-around;align-items:flex-start;width:100%}.category{padding:var(--emoji-padding);font-size:var(--category-font-size);color:var(--category-font-color)}.custom-emoji,.emoji,button.emoji{height:var(--total-emoji-size);width:var(--total-emoji-size)}.emoji,button.emoji{font-size:var(--emoji-size);display:flex;align-items:center;justify-content:center;border-radius:100%;line-height:1;overflow:hidden;font-family:var(--emoji-font-family);cursor:pointer}@media (hover:hover) and (pointer:fine){.emoji:hover,button.emoji:hover{background:var(--button-hover-background)}}.emoji.active,.emoji:active,button.emoji.active,button.emoji:active{background:var(--button-active-background)}.custom-emoji{padding:var(--emoji-padding);object-fit:contain;pointer-events:none;background-repeat:no-repeat;background-position:center center;background-size:var(--emoji-size) var(--emoji-size)}.nav,.nav-button{align-items:center}.nav{display:grid;justify-content:space-between;contain:content}.nav-button{display:flex;justify-content:center}.nav-emoji{font-size:var(--category-emoji-size);width:var(--total-category-emoji-size);height:var(--total-category-emoji-size)}.indicator-wrapper{display:flex;border-bottom:1px solid var(--border-color)}.indicator{width:calc(100%/var(--num-groups));height:var(--indicator-height);opacity:var(--indicator-opacity);background-color:var(--indicator-color);will-change:transform,opacity;transition:opacity .1s linear,transform .25s ease-in-out}@media (prefers-reduced-motion:reduce){.indicator{will-change:opacity;transition:opacity .1s linear}}.pad-top,input.search{background:var(--background);width:100%}.pad-top{height:var(--emoji-padding);z-index:3}.search-row{display:flex;align-items:center;position:relative;padding-inline-start:var(--emoji-padding);padding-bottom:var(--emoji-padding)}.search-wrapper{flex:1;min-width:0}input.search{padding:var(--input-padding);border-radius:var(--input-border-radius);border:var(--input-border-size) solid var(--input-border-color);color:var(--input-font-color);font-size:var(--input-font-size);line-height:var(--input-line-height)}input.search::placeholder{color:var(--input-placeholder-color)}.favorites{display:flex;flex-direction:row;border-top:var(--border-size) solid var(--border-color);contain:content}.message{padding:var(--emoji-padding)}\" + EXTRA_STYLES;\n    this.shadowRoot.appendChild(style);\n    this._ctx = {\n      // Set defaults\n      locale: DEFAULT_LOCALE,\n      dataSource: DEFAULT_DATA_SOURCE,\n      skinToneEmoji: DEFAULT_SKIN_TONE_EMOJI,\n      customCategorySorting: DEFAULT_CATEGORY_SORTING,\n      customEmoji: null,\n      i18n: enI18n,\n      emojiVersion: null,\n      ...props\n    };\n    // Handle properties set before the element was upgraded\n    for (const prop of PROPS) {\n      if (prop !== 'database' && Object.prototype.hasOwnProperty.call(this, prop)) {\n        this._ctx[prop] = this[prop];\n        delete this[prop];\n      }\n    }\n    this._dbFlush(); // wait for a flush before creating the db, in case the user calls e.g. a setter or setAttribute\n  }\n\n  connectedCallback () {\n    // The _cmp may be defined if the component was immediately disconnected and then reconnected. In that case,\n    // do nothing (preserve the state)\n    if (!this._cmp) {\n      this._cmp = new Picker({\n        target: this.shadowRoot,\n        props: this._ctx\n      });\n    }\n  }\n\n  disconnectedCallback () {\n    // Check in a microtask if the element is still connected. If so, treat this as a \"move\" rather than a disconnect\n    // Inspired by Vue: https://vuejs.org/guide/extras/web-components.html#building-custom-elements-with-vue\n    Promise.resolve().then(() => {\n      // this._cmp may be defined if connect-disconnect-connect-disconnect occurs synchronously\n      if (!this.isConnected && this._cmp) {\n        this._cmp.$destroy();\n        this._cmp = undefined;\n\n        const { database } = this._ctx;\n        database.close()\n          // only happens if the database failed to load in the first place, so we don't care\n          .catch(err => console.error(err));\n      }\n    });\n  }\n\n  static get observedAttributes () {\n    return ['locale', 'data-source', 'skin-tone-emoji', 'emoji-version'] // complex objects aren't supported, also use kebab-case\n  }\n\n  attributeChangedCallback (attrName, oldValue, newValue) {\n    this._set(\n      // convert from kebab-case to camelcase\n      // see https://github.com/sveltejs/svelte/issues/3852#issuecomment-665037015\n      attrName.replace(/-([a-z])/g, (_, up) => up.toUpperCase()),\n      // convert string attribute to float if necessary\n      attrName === 'emoji-version' ? parseFloat(newValue) : newValue\n    );\n  }\n\n  _set (prop, newValue) {\n    this._ctx[prop] = newValue;\n    if (this._cmp) {\n      this._cmp.$set({ [prop]: newValue });\n    }\n    if (['locale', 'dataSource'].includes(prop)) {\n      this._dbFlush();\n    }\n  }\n\n  _dbCreate () {\n    const { locale, dataSource, database } = this._ctx;\n    // only create a new database if we really need to\n    if (!database || database.locale !== locale || database.dataSource !== dataSource) {\n      this._set('database', new Database({ locale, dataSource }));\n    }\n  }\n\n  // Update the Database in one microtask if the locale/dataSource change. We do one microtask\n  // so we don't create two Databases if e.g. both the locale and the dataSource change\n  _dbFlush () {\n    Promise.resolve().then(() => (\n      this._dbCreate()\n    ));\n  }\n}\n\nconst definitions = {};\n\nfor (const prop of PROPS) {\n  definitions[prop] = {\n    get () {\n      if (prop === 'database') {\n        // in rare cases, the microtask may not be flushed yet, so we need to instantiate the DB\n        // now if the user is asking for it\n        this._dbCreate();\n      }\n      return this._ctx[prop]\n    },\n    set (val) {\n      if (prop === 'database') {\n        throw new Error('database is read-only')\n      }\n      this._set(prop, val);\n    }\n  };\n}\n\nObject.defineProperties(PickerElement.prototype, definitions);\n\n/* istanbul ignore else */\nif (!customElements.get('emoji-picker')) { // if already defined, do nothing (e.g. same script imported twice)\n  customElements.define('emoji-picker', PickerElement);\n}\n\nexport { PickerElement as default };\n","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"5krED\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"erfBi\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"7ee9c\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"b0Obp\")).toString();"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$6AR8M","$f19b912d87716459$var$assertNonEmptyString","str","$f19b912d87716459$var$assertNumber","number","$f19b912d87716459$var$DB_VERSION_CURRENT","$f19b912d87716459$var$DB_VERSION_INITIAL","$f19b912d87716459$var$STORE_EMOJI","$f19b912d87716459$var$STORE_KEYVALUE","$f19b912d87716459$var$STORE_FAVORITES","$f19b912d87716459$var$FIELD_TOKENS","$f19b912d87716459$var$INDEX_TOKENS","$f19b912d87716459$var$FIELD_UNICODE","$f19b912d87716459$var$INDEX_COUNT","$f19b912d87716459$var$FIELD_GROUP","$f19b912d87716459$var$FIELD_ORDER","$f19b912d87716459$var$INDEX_GROUP_AND_ORDER","$f19b912d87716459$var$KEY_ETAG","$f19b912d87716459$var$KEY_URL","$f19b912d87716459$var$KEY_PREFERRED_SKINTONE","$f19b912d87716459$var$MODE_READONLY","$f19b912d87716459$var$MODE_READWRITE","$f19b912d87716459$var$INDEX_SKIN_UNICODE","$f19b912d87716459$var$FIELD_SKIN_UNICODE","$f19b912d87716459$var$uniqEmoji","emojis","arr","func","set","Set","res","item","key","has","add","push","$f19b912d87716459$var$uniqBy","_","unicode","$f19b912d87716459$var$openIndexedDBRequests","$f19b912d87716459$var$databaseCache","$f19b912d87716459$var$onCloseListeners","$f19b912d87716459$var$handleOpenOrDeleteReq","resolve","reject","req","onerror","error","onblocked","onsuccess","result","async","$f19b912d87716459$var$createDatabase","dbName","db","Promise","indexedDB","open","onupgradeneeded","e","oldVersion","createObjectStore","name","keyPath","indexes","store","indexName","multiEntry","entries","createIndex","undefined","$f19b912d87716459$var$initialMigration","onclose","$f19b912d87716459$var$closeDatabase","$f19b912d87716459$var$dbPromise","storeName","readOnlyOrReadWrite","cb","txn","transaction","durability","objectStore","map","oncomplete","close","listeners","listener","$f19b912d87716459$var$irregularEmoticons","$f19b912d87716459$var$extractTokens","split","word","match","toLowerCase","replace","filter","Boolean","$f19b912d87716459$var$MIN_SEARCH_TEXT_LENGTH","$f19b912d87716459$var$normalizeTokens","$f19b912d87716459$var$callStore","method","target","$f19b912d87716459$var$getIDB","$f19b912d87716459$var$getAllIDB","$f19b912d87716459$var$commit","commit","$f19b912d87716459$var$findCommonMembers","arrays","uniqByFunc","shortestArray","array","minItem","$f19b912d87716459$var$minBy","results","some","findIndex","$f19b912d87716459$var$loadData","emojiData","url","eTag","transformedData","annotation","emoticon","group","order","shortcodes","skins","tags","emoji","version","tokens","flat","sort","skinTones","skinUnicodes","skinVersions","tone","$f19b912d87716459$var$transformEmojiData","emojiStore","metaStore","oldETag","oldUrl","todo","checkFetched","clear","data","put","onFetched","$f19b912d87716459$var$getEmojiBySearchQuery","query","intermediateResults","onDone","a","b","token","range","IDBKeyRange","bound","only","index","$f19b912d87716459$var$getEmojiByShortcode","shortcode","predicate","includes","lastKey","processNextBatch","getAll","lowerBound","$f19b912d87716459$var$doFullDatabaseScanForSingleResult","lowerShortcodes","$f19b912d87716459$var$get","$f19b912d87716459$var$CODA_MARKER","$f19b912d87716459$var$requiredKeys$1","$f19b912d87716459$var$customEmojiIndex","customEmojis","isArray","Array","firstItemIsFaulty","$f19b912d87716459$var$assertCustomEmojis","sortByName","all","searchTrie","itemToTokens","Map","currentMap","char","charAt","nextMap","get","valuesAtCoda","exact","queue","entriesSortedByKey","shift","value","$f19b912d87716459$var$trie","searchByExactMatch","searchByPrefix","shortcodeToEmoji","nameToEmoji","customEmoji","$f19b912d87716459$var$cleanEmoji","len","$f19b912d87716459$var$warnETag","console","warn","$f19b912d87716459$var$requiredKeys","$f19b912d87716459$var$assertStatus","response","dataSource","Math","floor","status","$f19b912d87716459$var$getETagAndData","fetch","headers","json","$f19b912d87716459$var$assertEmojiData","$f19b912d87716459$var$jsonChecksum","object","inBuffer","binary","buf","ArrayBuffer","Uint8Array","charCodeAt","$f19b912d87716459$var$binaryStringToArrayBuffer","stringify","outBinString","buffer","bytes","byteLength","String","fromCharCode","$f19b912d87716459$var$arrayBufferToBinaryString","crypto","subtle","digest","btoa","$f19b912d87716459$var$checkForUpdates","$f19b912d87716459$var$getETag","eTagAndData","$f19b912d87716459$var$hasData","$f19b912d87716459$export$2e2bcd8739ae039","constructor","locale","this","_dbName","_db","_lazyUpdate","_custom","_clear","bind","_ready","_init","$f19b912d87716459$var$addOnCloseListener","empty","$f19b912d87716459$var$isEmpty","$f19b912d87716459$var$loadDataForFirstTime","checkReady","ready","$f19b912d87716459$var$getEmojiByGroup","search","custom","byShortcode","unicodeOrName","byName","$f19b912d87716459$var$getEmojiByUnicode","skinTone","limit","customEmojiIndex","favoritesStore","openCursor","cursor","addResult","continue","primaryKey","$f19b912d87716459$var$getTopFavoriteEmoji","err","_shutdown","deleteDatabase","$be550d328187eb94$var$noop","$be550d328187eb94$var$run","fn","$be550d328187eb94$var$blank_object","create","$be550d328187eb94$var$run_all","fns","forEach","$be550d328187eb94$var$is_function","thing","$be550d328187eb94$var$safe_not_equal","$be550d328187eb94$var$src_url_equal_anchor","$be550d328187eb94$var$current_component","$be550d328187eb94$var$src_url_equal","element_src","document","createElement","href","$be550d328187eb94$var$append","node","appendChild","$be550d328187eb94$var$insert","anchor","insertBefore","$be550d328187eb94$var$detach","parentNode","removeChild","$be550d328187eb94$var$element","$be550d328187eb94$var$text","createTextNode","$be550d328187eb94$var$listen","event","handler","options","addEventListener","removeEventListener","$be550d328187eb94$var$attr","attribute","removeAttribute","getAttribute","setAttribute","$be550d328187eb94$var$set_data","text","wholeText","$be550d328187eb94$var$set_input_value","input","$be550d328187eb94$var$set_style","important","style","removeProperty","setProperty","$be550d328187eb94$var$set_current_component","component","$be550d328187eb94$var$onMount","$be550d328187eb94$var$get_current_component","$$","on_mount","$be550d328187eb94$var$dirty_components","$be550d328187eb94$var$binding_callbacks","$be550d328187eb94$var$render_callbacks","$be550d328187eb94$var$flush_callbacks","$be550d328187eb94$var$resolved_promise","$be550d328187eb94$var$update_scheduled","$be550d328187eb94$var$schedule_update","then","$be550d328187eb94$var$flush","$be550d328187eb94$var$add_render_callback","$be550d328187eb94$var$seen_callbacks","$be550d328187eb94$var$flushidx","saved_component","$be550d328187eb94$var$update","pop","callback","fragment","update","before_update","dirty","p","ctx","after_update","$be550d328187eb94$var$outroing","$be550d328187eb94$var$globals","window","globalThis","$parcel$global","$be550d328187eb94$var$destroy_block","block","lookup","d","delete","$be550d328187eb94$var$update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","c","abs","will_move","did_move","insert","local","$be550d328187eb94$var$transition_in","m","first","new_block","old_block","new_key","old_key","$be550d328187eb94$var$init","instance","create_fragment","not_equal","props","append_styles","parent_component","on_destroy","on_disconnect","context","callbacks","skip_bound","root","ret","rest","fill","$be550d328187eb94$var$make_dirty","customElement","new_on_destroy","$be550d328187eb94$var$mount_component","$be550d328187eb94$var$SvelteComponent","$destroy","detaching","$be550d328187eb94$var$destroy_component","$on","type","indexOf","splice","$set","$$props","obj","$$set","$be550d328187eb94$var$allGroups","$be550d328187eb94$var$groups","slice","$be550d328187eb94$var$customGroup","$be550d328187eb94$var$rIC","requestIdleCallback","setTimeout","$be550d328187eb94$var$hasZwj","$be550d328187eb94$var$versionsAndTestEmoji","$be550d328187eb94$var$MOST_COMMONLY_USED_EMOJI","$be550d328187eb94$var$FONT_FAMILY","$be550d328187eb94$var$DEFAULT_CATEGORY_SORTING","$be550d328187eb94$var$getTextFeature","color","canvas","width","height","getContext","textBaseline","font","fillStyle","scale","fillText","getImageData","$be550d328187eb94$var$compareFeatures","feature1","feature2","feature1Str","join","startsWith","$be550d328187eb94$var$testColorEmojiSupported","$be550d328187eb94$var$promise","$be550d328187eb94$var$detectEmojiSupportLevel","$be550d328187eb94$var$determineEmojiSupportLevel","$be550d328187eb94$var$supportedZwjEmojis","$be550d328187eb94$var$VARIATION_SELECTOR","$be550d328187eb94$var$SKINTONE_MODIFIER","$be550d328187eb94$var$ZWJ","$be550d328187eb94$var$LIGHT_SKIN_TONE","$be550d328187eb94$var$LIGHT_SKIN_TONE_MODIFIER","$be550d328187eb94$var$halt","preventDefault","stopPropagation","$be550d328187eb94$var$incrementOrDecrement","decrement","val","$be550d328187eb94$var$uniqBy","$be550d328187eb94$var$rAF","requestAnimationFrame","$be550d328187eb94$var$baselineEmojiWidth","$be550d328187eb94$var$resizeObserverSupported","ResizeObserver","$be550d328187eb94$var$calculateTextWidth","createRange","selectNode","firstChild","getBoundingClientRect","$be550d328187eb94$var$Map_1","$be550d328187eb94$var$get_each_context","$be550d328187eb94$var$get_each_context_1","$be550d328187eb94$var$get_each_context_2","$be550d328187eb94$var$get_each_context_3","$be550d328187eb94$var$get_each_context_4","$be550d328187eb94$var$create_each_block_4","key_1","div","t","div_id_value","div_class_value","div_aria_selected_value","div_title_value","div_aria_label_value","t_value","new_ctx","$be550d328187eb94$var$create_each_block_3","button","button_aria_controls_value","button_aria_label_value","button_aria_selected_value","button_title_value","mounted","dispose","click_handler","categories","$be550d328187eb94$var$create_else_block_1","img","img_src_value","src","$be550d328187eb94$var$create_if_block_1","$be550d328187eb94$var$create_each_block_2","button_role_value","button_class_value","button_id_value","select_block_type","current_block_type","if_block","title","$be550d328187eb94$var$create_each_block_1","div0","div0_id_value","div0_class_value","div1","div1_role_value","div1_aria_labelledby_value","div1_id_value","searchResultsLabel","category","each_blocks","each_1_lookup","each_value_2","$be550d328187eb94$var$create_else_block","$be550d328187eb94$var$create_if_block","$be550d328187eb94$var$create_each_block","select_block_type_1","$be550d328187eb94$var$create_fragment","section","div4","input_placeholder_value","input_aria_expanded_value","input_aria_activedescendant_value","label","t0","span0","t1","div2","button0","t2","button0_class_value","div2_class_value","span1","t3","div3","div3_class_value","div3_aria_label_value","div3_aria_activedescendant_value","div3_aria_hidden_value","div5","div5_aria_label_value","div7","div6","div8","t4","div8_class_value","div10","div9","div10_class_value","div10_role_value","div10_aria_label_value","div10_id_value","div11","div11_class_value","div11_aria_label_value","button1","section_aria_label_value","t0_value","searchLabel","t1_value","searchDescription","t3_value","skinToneDescription","each_blocks_3","each0_lookup","each_blocks_2","each1_lookup","each_blocks_1","each2_lookup","each3_lookup","each_value_4","each_value_3","get_key_1","each_value_1","get_key_2","each_value","get_key_3","textContent","skinTonesLabel","categoriesLabel","favoritesLabel","regionLabel","action_result","call","$be550d328187eb94$var$instance","$$self","$$invalidate","rootElement","baselineEmoji","tabpanelElement","message","skinToneDropdown","skinToneButtonText","pickerStyle","defaultFavoriteEmojis","currentGroup","activeSearchItemId","skinToneEmoji","i18n","database","customCategorySorting","emojiVersion","currentEmojis","currentEmojisWithCategories","rawSearchText","searchText","searchMode","activeSearchItem","skinTonePickerExpanded","skinTonePickerExpandedAfterAnimation","currentSkinTone","activeSkinTone","skinToneButtonLabel","currentFavorites","numColumns","isRtl","scrollbarWidth","currentGroupIndex","groups$1","databaseLoaded","focus","getRootNode","getElementById","fireEvent","detail","dispatchEvent","CustomEvent","bubbles","composed","unicodeWithSkin","isSkinToneOption","element","test","checkZwjSupportAndUpdate","zwjEmojisToCheck","rootNode","emojiToDomNode","emojiWidth","supported","$be550d328187eb94$var$checkZwjSupport","isZwjSupported","filterEmojisByVersion","emojiSupportLevel","summarizeEmojis","toSimpleSkinsMap","skin","$be550d328187eb94$var$summarizeEmojisForUI","onNavClick","clickEmoji","getEmojiByUnicodeOrName","emojiSummary","find","skinTonedUnicode","incrementFavoriteEmojiCount","onSkinToneOptionsClick","parseInt","setPreferredSkinTone","level","emojiUnsupportedMessage","showingLoadingMessage","timeoutHandle","loadingMessage","networkErrorMessage","clearTimeout","handleDatabaseLoading","trim","currentSearchText","newEmojis","getEmojiBySearchQuery","getEmojisBySearchQuery","currentGroupId","getEmojiByGroup","getEmojisByGroup","updateEmojis","getPreferredSkinTone","updatePreferredSkinTone","zwjIndex","substring","fromCodePoint","endsWith","$be550d328187eb94$var$applySkinTone","skinToneLabel","updateDefaultFavoriteEmojis","dbFavorites","getTopFavoriteEmoji","favorites","updateFavorites","scrollTop","categoriesToEmoji","calculateCurrentEmojisWithCategories","once","$be550d328187eb94$var$uniq","onUpdate","resizeObserver","contentRect","observe","disconnect","$be550d328187eb94$var$calculateWidth","getComputedStyle","newNumColumns","getPropertyValue","newIsRtl","newScrollbarWidth","parentElement","goToNextOrPrevious","previous","doFocus","el","previousSibling","nextSibling","lastChild","classList","contains","changeActiveSkinTone","nextSkinTone","relatedTarget","$$value","$be550d328187eb94$var$Picker","super","$be550d328187eb94$var$enI18n","activities","objects","symbols","flags","$be550d328187eb94$var$PROPS","$be550d328187eb94$var$EXTRA_STYLES","$be550d328187eb94$export$2e2bcd8739ae039","HTMLElement","attachShadow","mode","shadowRoot","_ctx","prop","prototype","hasOwnProperty","_dbFlush","connectedCallback","_cmp","disconnectedCallback","isConnected","catch","observedAttributes","attributeChangedCallback","attrName","oldValue","newValue","_set","up","toUpperCase","parseFloat","_dbCreate","$be550d328187eb94$var$definitions","defineProperties","customElements","define","$0ba618d27e73033e$exports","URL","toString","$bd3c449d8996b04d$exports","$697e1cdf7f5f533a$exports","$ebfe3654a4b09865$exports","log","auth","getAuth","onAuthStateChanged","user","userId","uid","$gdelx","getDatabase","userRef","ref","onValue","snapshot","userData","userNameDisplay","userNameLogOutDisplay","querySelector","userImageDisplay","innerHTML","username","innerText","image","imgUrl","$26e40e4babb8c21b$var$displayPosts","$k8Jq9","fetchUsers","users","values","container","append","currentUser","contentInput","content","createPost","postsRef","posts","postContainer","post","postItem","className","createdAt","likes","likeBtn","$26e40e4babb8c21b$var$handleLike","postId","postData","updatedLikes","updateLikes","likeButton","heartIcon"],"version":3,"file":"mainpage.40f789c7.js.map"}